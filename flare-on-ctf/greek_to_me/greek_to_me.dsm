;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2017 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2017-09-06 08:24:48
;; Architecture: x86
;;

;;
;; Code Segment
;;

; section: .text
; function: entry_point at 0x401000 -- 0x401007
0x401000:   e8 03 00 00 00            	call 0x401008 <function_401008>
0x401005:   33 c0                     	xor eax, eax
0x401007:   c3                        	ret
; function: function_401008 at 0x401008 -- 0x401120
0x401008:   55                        	push ebp
0x401009:   8b ec                     	mov ebp, esp
0x40100b:   83 ec 0c                  	sub esp, 0xc
0x40100e:   53                        	push ebx
0x40100f:   56                        	push esi
0x401010:   57                        	push edi
0x401011:   8d 45 f8                  	lea eax, dword [ ebp + 0xfffffff8 ]
0x401014:   50                        	push eax
0x401015:   e8 07 01 00 00            	call 0x401121 <function_401121>
0x40101a:   59                        	pop ecx
0x40101b:   89 45 fc                  	mov dword [ ebp + 0xfffffffc ], eax
0x40101e:   83 7d fc 00               	cmp dword [ ebp + 0xfffffffc ], 0x0
0x401022:   75 05                     	jnz 0x401029 <function_401008+0x21>
0x401024:   e9 ef 00 00 00            	jmp 0x401118 <function_401008+0x110>
0x401029:   b9 7c 10 40 00            	mov ecx, 0x40107c
0x40102e:   83 c1 79                  	add ecx, 0x79
0x401031:   b8 7c 10 40 00            	mov eax, 0x40107c
0x401036:   8a 55 f8                  	mov dl, byte [ ebp + 0xfffffff8 ]
0x401039:   8a 18                     	mov bl, byte [ eax ]
0x40103b:   32 da                     	xor bl, dl
0x40103d:   80 c3 22                  	add bl, 0x22
0x401040:   88 18                     	mov byte [ eax ], bl
0x401042:   40                        	inc eax
0x401043:   3b c1                     	cmp eax, ecx
0x401045:   7c f2                     	jl 0x401039 <function_401008+0x31>
0x401047:   b8 7c 10 40 00            	mov eax, 0x40107c
0x40104c:   89 45 f4                  	mov dword [ ebp + 0xfffffff4 ], eax
0x40104f:   6a 79                     	push 0x79
0x401051:   ff 75 f4                  	push dword [ ebp + 0xfffffff4 ]
0x401054:   e8 8d 01 00 00            	call 0x4011e6 <function_4011e6>
0x401059:   59                        	pop ecx
0x40105a:   59                        	pop ecx
0x40105b:   0f b7 c0                  	movzx eax, ax
0x40105e:   3d 5e fb 00 00            	cmp eax, 0xfb5e
0x401063:   74 17                     	jz 0x40107c <function_401008+0x74>
0x401065:   6a 00                     	push 0x0
0x401067:   6a 14                     	push 0x14
0x401069:   68 30 20 40 00            	push 0x402030 ; "Nope, that's not it."
0x40106e:   ff 75 fc                  	push dword [ ebp + 0xfffffffc ]
0x401071:   ff 15 1c 20 40 00         	call dword [ 0x40201c <send> ]
0x401077:   e9 8b 00 00 00            	jmp 0x401107 <function_401008+0xff>
0x40107c:   33 e1                     	xor esp, ecx
0x40107e:   c4 99 11 06 81 16         	les ebx, dword [ ecx + 0x16810611 ]
0x401084:   f0                        	lock
0x401085:   32 9f c4 91 17 06         	xor bl, byte [ edi + 0x61791c4 ]
0x40108b:   81 14 f0 06 81 15 f1      	adc dword [ eax + esi * 0x3 ], 0xf1158106
0x401092:   c4 91 1a 06 81 1b         	les edx, dword [ ecx + 0x1b81061a ]
0x401098:   e2 06                     	loop 0x4010a0 <function_401008+0x98>
0x40109a:   81 18 f2 06 81 19         	sbb dword [ eax ], 0x198106f2
0x4010a0:   f1                        	
0x4010a1:   06                        	push es
0x4010a2:   81 1e f0 c4 99 1f         	sbb dword [ esi ], 0x1f99c4f0
0x4010a8:   c4 91 1c 06 81 1d         	les edx, dword [ ecx + 0x1d81061c ]
0x4010ae:   e6                        	
0x4010af:   06                        	push es
0x4010b0:   81 62 ef 06 81 63 f2      	and dword [ edx + 0xffffffef ], 0xf2638106
0x4010b7:   06                        	push es
0x4010b8:   81 60 e3 c4 99 61 06      	and dword [ eax + 0xffffffe3 ], 0x66199c4
0x4010bf:   81 66 bc 06 81 67 e6      	and dword [ esi + 0xffffffbc ], 0xe6678106
0x4010c6:   06                        	push es
0x4010c7:   81 64 e8 06 81 65 9d 06   	and dword [ eax + ebp * 0x3 + 0x6 ], 0x69d6581
0x4010cf:   81 6a f2 c4 99 6b 06      	sub dword [ edx + 0xfffffff2 ], 0x66b99c4
0x4010d6:   81 68 a9 06 81 69 ef      	sub dword [ eax + 0xffffffa9 ], 0xef698106
0x4010dd:   06                        	push es
0x4010de:   81 6e ee 06 81 6f ae      	sub dword [ esi + 0xffffffee ], 0xae6f8106
0x4010e5:   06                        	push es
0x4010e6:   81 6c e3 06 81 6d ef 06   	sub dword [ ebx + 0x6 ], 0x6ef6d81
0x4010ee:   81 72 e9 06 81 73 7c      	xor dword [ edx + 0xffffffe9 ], 0x7c738106
0x4010f5:   6a 00                     	push 0x0
0x4010f7:   6a 2b                     	push 0x2b
0x4010f9:   68 48 20 40 00            	push 0x402048 ; "Congratulations! But wait, where's my flag?"
0x4010fe:   ff 75 fc                  	push dword [ ebp + 0xfffffffc ]
0x401101:   ff 15 1c 20 40 00         	call dword [ 0x40201c <send> ]
0x401107:   ff 75 fc                  	push dword [ ebp + 0xfffffffc ]
0x40110a:   ff 15 08 20 40 00         	call dword [ 0x402008 <closesocket> ]
0x401110:   ff 15 28 20 40 00         	call dword [ 0x402028 <WSACleanup> ]
0x401116:   eb 02                     	jmp 0x40111a <function_401008+0x112>
0x401118:   33 c0                     	xor eax, eax
0x40111a:   5f                        	pop edi
0x40111b:   5e                        	pop esi
0x40111c:   5b                        	pop ebx
0x40111d:   8b e5                     	mov esp, ebp
0x40111f:   5d                        	pop ebp
0x401120:   c3                        	ret
; function: function_401121 at 0x401121 -- 0x4011e5
0x401121:   55                        	push ebp
0x401122:   8b ec                     	mov ebp, esp
0x401124:   81 ec a0 01 00 00         	sub esp, 0x1a0
0x40112a:   8d 85 60 fe ff ff         	lea eax, dword [ ebp + 0xfffffe60 ]
0x401130:   50                        	push eax
0x401131:   68 02 02 00 00            	push 0x202
0x401136:   ff 15 24 20 40 00         	call dword [ 0x402024 <WSAStartup> ]
0x40113c:   85 c0                     	test eax, eax
0x40113e:   74 07                     	jz 0x401147 <function_401121+0x26>
0x401140:   33 c0                     	xor eax, eax
0x401142:   e9 9b 00 00 00            	jmp 0x4011e2 <function_401121+0xc1>
0x401147:   56                        	push esi
0x401148:   57                        	push edi
0x401149:   6a 06                     	push 0x6
0x40114b:   6a 01                     	push 0x1
0x40114d:   6a 02                     	push 0x2
0x40114f:   5f                        	pop edi
0x401150:   57                        	push edi
0x401151:   ff 15 20 20 40 00         	call dword [ 0x402020 <socket> ]
0x401157:   8b f0                     	mov esi, eax
0x401159:   83 fe ff                  	cmp esi, 0xffffffff
0x40115c:   74 7a                     	jz 0x4011d8 <function_401121+0xb7>
0x40115e:   68 74 20 40 00            	push 0x402074 ; "127.0.0.1"
0x401163:   66 89 7d f0               	mov word [ ebp + 0xfffffff0 ], di
0x401167:   ff 15 10 20 40 00         	call dword [ 0x402010 <inet_addr> ]
0x40116d:   68 ae 08 00 00            	push 0x8ae
0x401172:   89 45 f4                  	mov dword [ ebp + 0xfffffff4 ], eax
0x401175:   ff 15 0c 20 40 00         	call dword [ 0x40200c <htons> ]
0x40117b:   66 89 45 f2               	mov word [ ebp + 0xfffffff2 ], ax
0x40117f:   8d 45 f0                  	lea eax, dword [ ebp + 0xfffffff0 ]
0x401182:   6a 10                     	push 0x10
0x401184:   50                        	push eax
0x401185:   56                        	push esi
0x401186:   ff 15 04 20 40 00         	call dword [ 0x402004 <bind> ]
0x40118c:   83 f8 ff                  	cmp eax, 0xffffffff
0x40118f:   74 40                     	jz 0x4011d1 <function_401121+0xb0>
0x401191:   68 ff ff ff 7f            	push 0x7fffffff
0x401196:   56                        	push esi
0x401197:   ff 15 14 20 40 00         	call dword [ 0x402014 <listen> ]
0x40119d:   83 f8 ff                  	cmp eax, 0xffffffff
0x4011a0:   74 2f                     	jz 0x4011d1 <function_401121+0xb0>
0x4011a2:   6a 00                     	push 0x0
0x4011a4:   6a 00                     	push 0x0
0x4011a6:   56                        	push esi
0x4011a7:   ff 15 00 20 40 00         	call dword [ 0x402000 <accept> ]
0x4011ad:   8b f8                     	mov edi, eax
0x4011af:   83 ff ff                  	cmp edi, 0xffffffff
0x4011b2:   74 1d                     	jz 0x4011d1 <function_401121+0xb0>
0x4011b4:   6a 00                     	push 0x0
0x4011b6:   6a 04                     	push 0x4
0x4011b8:   ff 75 08                  	push dword [ ebp + 0x8 ]
0x4011bb:   57                        	push edi
0x4011bc:   ff 15 18 20 40 00         	call dword [ 0x402018 <recv> ]
0x4011c2:   85 c0                     	test eax, eax
0x4011c4:   7e 04                     	jle 0x4011ca <function_401121+0xa9>
0x4011c6:   8b c7                     	mov eax, edi
0x4011c8:   eb 16                     	jmp 0x4011e0 <function_401121+0xbf>
0x4011ca:   57                        	push edi
0x4011cb:   ff 15 08 20 40 00         	call dword [ 0x402008 <closesocket> ]
0x4011d1:   56                        	push esi
0x4011d2:   ff 15 08 20 40 00         	call dword [ 0x402008 <closesocket> ]
0x4011d8:   ff 15 28 20 40 00         	call dword [ 0x402028 <WSACleanup> ]
0x4011de:   33 c0                     	xor eax, eax
0x4011e0:   5f                        	pop edi
0x4011e1:   5e                        	pop esi
0x4011e2:   8b e5                     	mov esp, ebp
0x4011e4:   5d                        	pop ebp
0x4011e5:   c3                        	ret
; function: function_4011e6 at 0x4011e6 -- 0x40126b
0x4011e6:   55                        	push ebp
0x4011e7:   8b ec                     	mov ebp, esp
0x4011e9:   51                        	push ecx
0x4011ea:   8b 55 0c                  	mov edx, dword [ ebp + 0xc ]
0x4011ed:   b9 ff 00 00 00            	mov ecx, 0xff
0x4011f2:   89 4d fc                  	mov dword [ ebp + 0xfffffffc ], ecx
0x4011f5:   85 d2                     	test edx, edx
0x4011f7:   74 51                     	jz 0x40124a <function_4011e6+0x64>
0x4011f9:   53                        	push ebx
0x4011fa:   8b 5d 08                  	mov ebx, dword [ ebp + 0x8 ]
0x4011fd:   56                        	push esi
0x4011fe:   57                        	push edi
0x4011ff:   6a 14                     	push 0x14
0x401201:   58                        	pop eax
0x401202:   66 8b 7d fc               	mov di, word [ ebp + 0xfffffffc ]
0x401206:   3b d0                     	cmp edx, eax
0x401208:   8b f2                     	mov esi, edx
0x40120a:   0f 47 f0                  	cmova esi, eax
0x40120d:   2b d6                     	sub edx, esi
0x40120f:   0f b6 03                  	movzx eax, byte [ ebx ]
0x401212:   66 03 f8                  	add di, ax
0x401215:   66 89 7d fc               	mov word [ ebp + 0xfffffffc ], di
0x401219:   03 4d fc                  	add ecx, dword [ ebp + 0xfffffffc ]
0x40121c:   43                        	inc ebx
0x40121d:   83 ee 01                  	sub esi, 0x1
0x401220:   75 ed                     	jnz 0x40120f <function_4011e6+0x29>
0x401222:   0f b6 45 fc               	movzx eax, byte [ ebp + 0xfffffffc ]
0x401226:   66 c1 ef 08               	shr di, 0x8
0x40122a:   66 03 c7                  	add ax, di
0x40122d:   0f b7 c0                  	movzx eax, ax
0x401230:   89 45 fc                  	mov dword [ ebp + 0xfffffffc ], eax
0x401233:   0f b6 c1                  	movzx eax, cl
0x401236:   66 c1 e9 08               	shr cx, 0x8
0x40123a:   66 03 c1                  	add ax, cx
0x40123d:   0f b7 c8                  	movzx ecx, ax
0x401240:   6a 14                     	push 0x14
0x401242:   58                        	pop eax
0x401243:   85 d2                     	test edx, edx
0x401245:   75 bb                     	jnz 0x401202 <function_4011e6+0x1c>
0x401247:   5f                        	pop edi
0x401248:   5e                        	pop esi
0x401249:   5b                        	pop ebx
0x40124a:   0f b6 55 fc               	movzx edx, byte [ ebp + 0xfffffffc ]
0x40124e:   8b c1                     	mov eax, ecx
0x401250:   c1 e1 08                  	shl ecx, 0x8
0x401253:   25 00 ff 00 00            	and eax, 0xff00
0x401258:   03 c1                     	add eax, ecx
0x40125a:   66 8b 4d fc               	mov cx, word [ ebp + 0xfffffffc ]
0x40125e:   66 c1 e9 08               	shr cx, 0x8
0x401262:   66 03 d1                  	add dx, cx
0x401265:   66 0b c2                  	or ax, dx
0x401268:   8b e5                     	mov esp, ebp
0x40126a:   5d                        	pop ebp
0x40126b:   c3                        	ret

;;
;; Data Segment
;;

; section: .rdata
0x402000:   01 00 00 80 02 00 00 80  03 00 00 80 09 00 00 80   |................|
0x402010:   0b 00 00 80 0d 00 00 80  10 00 00 80 13 00 00 80   |................|
0x402020:   17 00 00 80 73 00 00 80  74 00 00 80 00 00 00 00   |....s...t.......|
0x402030:   4e 6f 70 65 2c 20 74 68  61 74 27 73 20 6e 6f 74   |Nope, that's not|   "Nope, that's not it."
0x402040:   20 69 74 2e 00                                     | it..           |
0x402045:   00 00 00                                           |...             |
0x402048:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 21   |Congratulations!|   "Congratulations! But wait, where's my flag?"
0x402058:   20 42 75 74 20 77 61 69  74 2c 20 77 68 65 72 65   | But wait, where|
0x402068:   27 73 20 6d 79 20 66 6c  61 67 3f 00               |'s my flag?.    |
0x402074:   31 32 37 2e 30 2e 30 2e  31 00                     |127.0.0.1.      |   "127.0.0.1"
0x40207e:   00 00 a8 20 00 00 00 00  00 00 00 00 00 00 d8 20   |... ........... |
0x40208e:   00 00 00 20 00 00 00 00  00 00 00 00 00 00 00 00   |... ............|
0x40209e:   00 00 00 00 00 00 00 00  00 00 01 00 00 80 02 00   |................|
0x4020ae:   00 80 03 00 00 80 09 00  00 80 0b 00 00 80 0d 00   |................|
0x4020be:   00 80 10 00 00 80 13 00  00 80 17 00 00 80 73 00   |..............s.|
0x4020ce:   00 80 74 00 00 80 00 00  00 00 57 53 32 5f 33 32   |..t.......WS2_32|
0x4020de:   2e 64 6c 6c 00 00                                  |.dll..          |
