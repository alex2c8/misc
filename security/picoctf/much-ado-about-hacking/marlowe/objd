
out:     file format elf64-x86-64


Disassembly of section .init:

0000000000000ac8 <_init>:
 ac8:	48 83 ec 08          	sub    rsp,0x8
 acc:	48 8b 05 ad 34 20 00 	mov    rax,QWORD PTR [rip+0x2034ad]        # 203f80 <__gmon_start__>
 ad3:	48 85 c0             	test   rax,rax
 ad6:	74 02                	je     ada <_init+0x12>
 ad8:	ff d0                	call   rax
 ada:	48 83 c4 08          	add    rsp,0x8
 ade:	c3                   	ret    

Disassembly of section .plt:

0000000000000ae0 <.plt>:
 ae0:	ff 35 42 34 20 00    	push   QWORD PTR [rip+0x203442]        # 203f28 <_GLOBAL_OFFSET_TABLE_+0x8>
 ae6:	ff 25 44 34 20 00    	jmp    QWORD PTR [rip+0x203444]        # 203f30 <_GLOBAL_OFFSET_TABLE_+0x10>
 aec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

Disassembly of section .plt.got:

0000000000000af0 <.plt.got>:
 af0:	ff 25 42 34 20 00    	jmp    QWORD PTR [rip+0x203442]        # 203f38 <__ctype_toupper_loc@GLIBC_2.3>
 af6:	66 90                	xchg   ax,ax
 af8:	ff 25 42 34 20 00    	jmp    QWORD PTR [rip+0x203442]        # 203f40 <free@GLIBC_2.2.5>
 afe:	66 90                	xchg   ax,ax
 b00:	ff 25 42 34 20 00    	jmp    QWORD PTR [rip+0x203442]        # 203f48 <__errno_location@GLIBC_2.2.5>
 b06:	66 90                	xchg   ax,ax
 b08:	ff 25 4a 34 20 00    	jmp    QWORD PTR [rip+0x20344a]        # 203f58 <strlen@GLIBC_2.2.5>
 b0e:	66 90                	xchg   ax,ax
 b10:	ff 25 4a 34 20 00    	jmp    QWORD PTR [rip+0x20344a]        # 203f60 <__stack_chk_fail@GLIBC_2.4>
 b16:	66 90                	xchg   ax,ax
 b18:	ff 25 4a 34 20 00    	jmp    QWORD PTR [rip+0x20344a]        # 203f68 <_IO_putc@GLIBC_2.2.5>
 b1e:	66 90                	xchg   ax,ax
 b20:	ff 25 52 34 20 00    	jmp    QWORD PTR [rip+0x203452]        # 203f78 <fgets@GLIBC_2.2.5>
 b26:	66 90                	xchg   ax,ax
 b28:	ff 25 5a 34 20 00    	jmp    QWORD PTR [rip+0x20345a]        # 203f88 <strtol@GLIBC_2.2.5>
 b2e:	66 90                	xchg   ax,ax
 b30:	ff 25 5a 34 20 00    	jmp    QWORD PTR [rip+0x20345a]        # 203f90 <memcpy@GLIBC_2.14>
 b36:	66 90                	xchg   ax,ax
 b38:	ff 25 5a 34 20 00    	jmp    QWORD PTR [rip+0x20345a]        # 203f98 <malloc@GLIBC_2.2.5>
 b3e:	66 90                	xchg   ax,ax
 b40:	ff 25 5a 34 20 00    	jmp    QWORD PTR [rip+0x20345a]        # 203fa0 <_IO_getc@GLIBC_2.2.5>
 b46:	66 90                	xchg   ax,ax
 b48:	ff 25 5a 34 20 00    	jmp    QWORD PTR [rip+0x20345a]        # 203fa8 <realloc@GLIBC_2.2.5>
 b4e:	66 90                	xchg   ax,ax
 b50:	ff 25 5a 34 20 00    	jmp    QWORD PTR [rip+0x20345a]        # 203fb0 <__printf_chk@GLIBC_2.3.4>
 b56:	66 90                	xchg   ax,ax
 b58:	ff 25 62 34 20 00    	jmp    QWORD PTR [rip+0x203462]        # 203fc0 <exit@GLIBC_2.2.5>
 b5e:	66 90                	xchg   ax,ax
 b60:	ff 25 62 34 20 00    	jmp    QWORD PTR [rip+0x203462]        # 203fc8 <__fprintf_chk@GLIBC_2.3.4>
 b66:	66 90                	xchg   ax,ax
 b68:	ff 25 6a 34 20 00    	jmp    QWORD PTR [rip+0x20346a]        # 203fd8 <sqrt@GLIBC_2.2.5>
 b6e:	66 90                	xchg   ax,ax
 b70:	ff 25 6a 34 20 00    	jmp    QWORD PTR [rip+0x20346a]        # 203fe0 <__cxa_finalize@GLIBC_2.2.5>
 b76:	66 90                	xchg   ax,ax
 b78:	ff 25 6a 34 20 00    	jmp    QWORD PTR [rip+0x20346a]        # 203fe8 <__ctype_tolower_loc@GLIBC_2.3>
 b7e:	66 90                	xchg   ax,ax
 b80:	ff 25 6a 34 20 00    	jmp    QWORD PTR [rip+0x20346a]        # 203ff0 <__ctype_b_loc@GLIBC_2.3>
 b86:	66 90                	xchg   ax,ax
 b88:	ff 25 6a 34 20 00    	jmp    QWORD PTR [rip+0x20346a]        # 203ff8 <__sprintf_chk@GLIBC_2.3.4>
 b8e:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000b90 <main>:

/* libspl definitions and function prototypes */
#include <spl.h>

int main(void)
{
     b90:	41 57                	push   r15
     b92:	41 56                	push   r14
  CHARACTER *achilles;                    /* I thought he was from Greece */
  CHARACTER *cleopatra;                   /* now this is just getting ridiculous */
  
  int comp1, comp2;
  
  global_initialize();
     b94:	31 c0                	xor    eax,eax
{
     b96:	41 55                	push   r13
     b98:	41 54                	push   r12
     b9a:	55                   	push   rbp
     b9b:	53                   	push   rbx
     b9c:	48 83 ec 18          	sub    rsp,0x18
  global_initialize();
     ba0:	e8 eb 09 00 00       	call   1590 <global_initialize>
  
  benedick = initialize_character("Benedick");
     ba5:	48 8d 3d 08 17 00 00 	lea    rdi,[rip+0x1708]        # 22b4 <_IO_stdin_used+0x4>
     bac:	e8 1f 0a 00 00       	call   15d0 <initialize_character>
  beatrice = initialize_character("Beatrice");
     bb1:	48 8d 3d 05 17 00 00 	lea    rdi,[rip+0x1705]        # 22bd <_IO_stdin_used+0xd>
  benedick = initialize_character("Benedick");
     bb8:	48 89 c5             	mov    rbp,rax
  beatrice = initialize_character("Beatrice");
     bbb:	e8 10 0a 00 00       	call   15d0 <initialize_character>
  don_pedro = initialize_character("Don Pedro");
     bc0:	48 8d 3d ff 16 00 00 	lea    rdi,[rip+0x16ff]        # 22c6 <_IO_stdin_used+0x16>
  beatrice = initialize_character("Beatrice");
     bc7:	48 89 c3             	mov    rbx,rax
  don_pedro = initialize_character("Don Pedro");
     bca:	e8 01 0a 00 00       	call   15d0 <initialize_character>
  don_john = initialize_character("Don John");
     bcf:	48 8d 3d fa 16 00 00 	lea    rdi,[rip+0x16fa]        # 22d0 <_IO_stdin_used+0x20>
  don_pedro = initialize_character("Don Pedro");
     bd6:	49 89 c6             	mov    r14,rax
  don_john = initialize_character("Don John");
     bd9:	e8 f2 09 00 00       	call   15d0 <initialize_character>
  achilles = initialize_character("Achilles");
     bde:	48 8d 3d f4 16 00 00 	lea    rdi,[rip+0x16f4]        # 22d9 <_IO_stdin_used+0x29>
  don_john = initialize_character("Don John");
     be5:	49 89 c4             	mov    r12,rax
  achilles = initialize_character("Achilles");
     be8:	e8 e3 09 00 00       	call   15d0 <initialize_character>
  cleopatra = initialize_character("Cleopatra");
     bed:	48 8d 3d ee 16 00 00 	lea    rdi,[rip+0x16ee]        # 22e2 <_IO_stdin_used+0x32>
  achilles = initialize_character("Achilles");
     bf4:	49 89 c5             	mov    r13,rax
  cleopatra = initialize_character("Cleopatra");
     bf7:	e8 d4 09 00 00       	call   15d0 <initialize_character>
  
  act_i:                                  /* Also the last act */
  
  act_i_scene_i:                          /* Benedick learns his place */
  
  enter_scene(15, beatrice);
     bfc:	48 89 de             	mov    rsi,rbx
     bff:	bf 0f 00 00 00       	mov    edi,0xf
  cleopatra = initialize_character("Cleopatra");
     c04:	49 89 c7             	mov    r15,rax
     c07:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
  enter_scene(15, beatrice);
     c0c:	e8 9f 08 00 00       	call   14b0 <enter_scene>
  enter_scene(15, don_john);
     c11:	4c 89 e6             	mov    rsi,r12
     c14:	bf 0f 00 00 00       	mov    edi,0xf
     c19:	e8 92 08 00 00       	call   14b0 <enter_scene>
  
  activate_character(20, beatrice);
     c1e:	48 89 de             	mov    rsi,rbx
     c21:	bf 14 00 00 00       	mov    edi,0x14
     c26:	e8 65 06 00 00       	call   1290 <activate_character>
  assign(18, second_person, 0);
     c2b:	48 8b 35 1e 34 20 00 	mov    rsi,QWORD PTR [rip+0x20341e]        # 204050 <second_person>
     c32:	31 d2                	xor    edx,edx
     c34:	bf 12 00 00 00       	mov    edi,0x12
     c39:	e8 02 07 00 00       	call   1340 <assign>
  
  exit_scene(20, don_john);
     c3e:	4c 89 e6             	mov    rsi,r12
     c41:	bf 14 00 00 00       	mov    edi,0x14
     c46:	e8 b5 08 00 00       	call   1500 <exit_scene>
  
  enter_scene(21, don_pedro);
     c4b:	4c 89 f6             	mov    rsi,r14
     c4e:	bf 15 00 00 00       	mov    edi,0x15
     c53:	e8 58 08 00 00       	call   14b0 <enter_scene>
  
  activate_character(26, beatrice);
     c58:	48 89 de             	mov    rsi,rbx
     c5b:	bf 1a 00 00 00       	mov    edi,0x1a
     c60:	e8 2b 06 00 00       	call   1290 <activate_character>
  assign(24, second_person, 0);
     c65:	48 8b 35 e4 33 20 00 	mov    rsi,QWORD PTR [rip+0x2033e4]        # 204050 <second_person>
     c6c:	31 d2                	xor    edx,edx
     c6e:	bf 18 00 00 00       	mov    edi,0x18
     c73:	e8 c8 06 00 00       	call   1340 <assign>
  
  exit_scene(26, don_pedro);
     c78:	4c 89 f6             	mov    rsi,r14
     c7b:	bf 1a 00 00 00       	mov    edi,0x1a
     c80:	e8 7b 08 00 00       	call   1500 <exit_scene>
  
  enter_scene(27, achilles);
     c85:	4c 89 ee             	mov    rsi,r13
     c88:	bf 1b 00 00 00       	mov    edi,0x1b
     c8d:	e8 1e 08 00 00       	call   14b0 <enter_scene>
  
  activate_character(32, beatrice);
     c92:	48 89 de             	mov    rsi,rbx
     c95:	bf 20 00 00 00       	mov    edi,0x20
     c9a:	e8 f1 05 00 00       	call   1290 <activate_character>
  assign(30, second_person, 2*2*2*2*2*1);
     c9f:	48 8b 35 aa 33 20 00 	mov    rsi,QWORD PTR [rip+0x2033aa]        # 204050 <second_person>
     ca6:	ba 20 00 00 00       	mov    edx,0x20
     cab:	bf 1e 00 00 00       	mov    edi,0x1e
     cb0:	e8 8b 06 00 00       	call   1340 <assign>
  
  exit_scene(32, achilles);
     cb5:	4c 89 ee             	mov    rsi,r13
     cb8:	bf 20 00 00 00       	mov    edi,0x20
     cbd:	e8 3e 08 00 00       	call   1500 <exit_scene>
  
  enter_scene(33, cleopatra);
     cc2:	4c 89 fe             	mov    rsi,r15
     cc5:	bf 21 00 00 00       	mov    edi,0x21
     cca:	e8 e1 07 00 00       	call   14b0 <enter_scene>
  
  activate_character(38, beatrice);
     ccf:	48 89 de             	mov    rsi,rbx
     cd2:	bf 26 00 00 00       	mov    edi,0x26
     cd7:	e8 b4 05 00 00       	call   1290 <activate_character>
  assign(36, second_person, int_sub(36, 2*2*2*2*2*2*2*1, achilles->value));
     cdc:	41 8b 55 00          	mov    edx,DWORD PTR [r13+0x0]
     ce0:	be 80 00 00 00       	mov    esi,0x80
     ce5:	bf 24 00 00 00       	mov    edi,0x24
     cea:	e8 f1 0c 00 00       	call   19e0 <int_sub>
     cef:	48 8b 35 5a 33 20 00 	mov    rsi,QWORD PTR [rip+0x20335a]        # 204050 <second_person>
     cf6:	89 c2                	mov    edx,eax
     cf8:	bf 24 00 00 00       	mov    edi,0x24
     cfd:	e8 3e 06 00 00       	call   1340 <assign>
  
  exit_scene(38, cleopatra);
     d02:	4c 89 fe             	mov    rsi,r15
     d05:	bf 26 00 00 00       	mov    edi,0x26
     d0a:	e8 f1 07 00 00       	call   1500 <exit_scene>
  
  enter_scene(39, benedick);
     d0f:	48 89 ee             	mov    rsi,rbp
     d12:	bf 27 00 00 00       	mov    edi,0x27
     d17:	e8 94 07 00 00       	call   14b0 <enter_scene>
  
  activate_character(44, beatrice);
     d1c:	48 89 de             	mov    rsi,rbx
     d1f:	bf 2c 00 00 00       	mov    edi,0x2c
     d24:	e8 67 05 00 00       	call   1290 <activate_character>
  assign(42, second_person, 0);
     d29:	48 8b 35 20 33 20 00 	mov    rsi,QWORD PTR [rip+0x203320]        # 204050 <second_person>
     d30:	31 d2                	xor    edx,edx
     d32:	bf 2a 00 00 00       	mov    edi,0x2a
     d37:	e8 04 06 00 00       	call   1340 <assign>
     d3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  
  act_i_scene_ii:                         /* Benedick strengthens his memory */
  
  activate_character(49, beatrice);
     d40:	48 89 de             	mov    rsi,rbx
     d43:	bf 31 00 00 00       	mov    edi,0x31
     d48:	e8 43 05 00 00       	call   1290 <activate_character>
  char_input(47, second_person);
     d4d:	48 8b 35 fc 32 20 00 	mov    rsi,QWORD PTR [rip+0x2032fc]        # 204050 <second_person>
     d54:	bf 2f 00 00 00       	mov    edi,0x2f
     d59:	e8 32 06 00 00       	call   1390 <char_input>
  push(47, second_person, value_of(47, second_person));
     d5e:	48 8b 35 eb 32 20 00 	mov    rsi,QWORD PTR [rip+0x2032eb]        # 204050 <second_person>
     d65:	bf 2f 00 00 00       	mov    edi,0x2f
     d6a:	e8 a1 0d 00 00       	call   1b10 <value_of>
     d6f:	48 8b 35 da 32 20 00 	mov    rsi,QWORD PTR [rip+0x2032da]        # 204050 <second_person>
     d76:	89 c2                	mov    edx,eax
     d78:	bf 2f 00 00 00       	mov    edi,0x2f
     d7d:	e8 1e 0d 00 00       	call   1aa0 <push>
  
  activate_character(53, benedick);
     d82:	48 89 ee             	mov    rsi,rbp
     d85:	bf 35 00 00 00       	mov    edi,0x35
     d8a:	e8 01 05 00 00       	call   1290 <activate_character>
  assign(50, second_person, int_add(50, value_of(50, second_person), 1));
     d8f:	48 8b 35 ba 32 20 00 	mov    rsi,QWORD PTR [rip+0x2032ba]        # 204050 <second_person>
     d96:	bf 32 00 00 00       	mov    edi,0x32
     d9b:	e8 70 0d 00 00       	call   1b10 <value_of>
     da0:	ba 01 00 00 00       	mov    edx,0x1
     da5:	89 c6                	mov    esi,eax
     da7:	bf 32 00 00 00       	mov    edi,0x32
     dac:	e8 9f 08 00 00       	call   1650 <int_add>
     db1:	48 8b 35 98 32 20 00 	mov    rsi,QWORD PTR [rip+0x203298]        # 204050 <second_person>
     db8:	89 c2                	mov    edx,eax
     dba:	bf 32 00 00 00       	mov    edi,0x32
     dbf:	e8 7c 05 00 00       	call   1340 <assign>
  comp1 = value_of(51, first_person);
     dc4:	48 8b 35 a5 32 20 00 	mov    rsi,QWORD PTR [rip+0x2032a5]        # 204070 <first_person>
     dcb:	bf 33 00 00 00       	mov    edi,0x33
     dd0:	e8 3b 0d 00 00       	call   1b10 <value_of>
  comp2 = 2*2*2*2*2*1;
  truth_flag = (comp1 == comp2);
     dd5:	83 f8 20             	cmp    eax,0x20
  
  activate_character(56, beatrice);
     dd8:	48 89 de             	mov    rsi,rbx
     ddb:	bf 38 00 00 00       	mov    edi,0x38
  truth_flag = (comp1 == comp2);
     de0:	0f 94 c0             	sete   al
     de3:	0f b6 c0             	movzx  eax,al
     de6:	89 05 74 32 20 00    	mov    DWORD PTR [rip+0x203274],eax        # 204060 <truth_flag>
  activate_character(56, beatrice);
     dec:	e8 9f 04 00 00       	call   1290 <activate_character>
  if (!truth_flag) {
     df1:	8b 15 69 32 20 00    	mov    edx,DWORD PTR [rip+0x203269]        # 204060 <truth_flag>
     df7:	85 d2                	test   edx,edx
     df9:	0f 84 41 ff ff ff    	je     d40 <main+0x1b0>
    goto act_i_scene_ii;
  }
  
  activate_character(59, benedick);
     dff:	48 89 ee             	mov    rsi,rbp
     e02:	bf 3b 00 00 00       	mov    edi,0x3b
     e07:	e8 84 04 00 00       	call   1290 <activate_character>
  assign(57, second_person, int_add(57, value_of(57, second_person), (-1)));
     e0c:	48 8b 35 3d 32 20 00 	mov    rsi,QWORD PTR [rip+0x20323d]        # 204050 <second_person>
     e13:	bf 39 00 00 00       	mov    edi,0x39
     e18:	e8 f3 0c 00 00       	call   1b10 <value_of>
     e1d:	ba ff ff ff ff       	mov    edx,0xffffffff
     e22:	89 c6                	mov    esi,eax
     e24:	bf 39 00 00 00       	mov    edi,0x39
     e29:	e8 22 08 00 00       	call   1650 <int_add>
     e2e:	48 8b 35 1b 32 20 00 	mov    rsi,QWORD PTR [rip+0x20321b]        # 204050 <second_person>
     e35:	89 c2                	mov    edx,eax
     e37:	bf 39 00 00 00       	mov    edi,0x39
     e3c:	e8 ff 04 00 00       	call   1340 <assign>
  
  activate_character(62, beatrice);
     e41:	48 89 de             	mov    rsi,rbx
     e44:	bf 3e 00 00 00       	mov    edi,0x3e
     e49:	e8 42 04 00 00       	call   1290 <activate_character>
  pop(60, second_person);
     e4e:	48 8b 35 fb 31 20 00 	mov    rsi,QWORD PTR [rip+0x2031fb]        # 204050 <second_person>
     e55:	bf 3c 00 00 00       	mov    edi,0x3c
     e5a:	e8 a1 0b 00 00       	call   1a00 <pop>
     e5f:	90                   	nop
  
  act_i_scene_iii:                        /* Benedick teaches his friends about hacking */
  
  activate_character(67, beatrice);
     e60:	48 89 de             	mov    rsi,rbx
     e63:	bf 43 00 00 00       	mov    edi,0x43
     e68:	e8 23 04 00 00       	call   1290 <activate_character>
  pop(65, second_person);
     e6d:	48 8b 35 dc 31 20 00 	mov    rsi,QWORD PTR [rip+0x2031dc]        # 204050 <second_person>
     e74:	bf 41 00 00 00       	mov    edi,0x41
     e79:	e8 82 0b 00 00       	call   1a00 <pop>
  assign(65, second_person, int_sub(65, value_of(65, second_person), achilles->value));
     e7e:	45 8b 7d 00          	mov    r15d,DWORD PTR [r13+0x0]
     e82:	48 8b 35 c7 31 20 00 	mov    rsi,QWORD PTR [rip+0x2031c7]        # 204050 <second_person>
     e89:	bf 41 00 00 00       	mov    edi,0x41
     e8e:	e8 7d 0c 00 00       	call   1b10 <value_of>
     e93:	44 89 fa             	mov    edx,r15d
     e96:	89 c6                	mov    esi,eax
     e98:	bf 41 00 00 00       	mov    edi,0x41
     e9d:	e8 3e 0b 00 00       	call   19e0 <int_sub>
     ea2:	48 8b 35 a7 31 20 00 	mov    rsi,QWORD PTR [rip+0x2031a7]        # 204050 <second_person>
     ea9:	89 c2                	mov    edx,eax
     eab:	bf 41 00 00 00       	mov    edi,0x41
     eb0:	e8 8b 04 00 00       	call   1340 <assign>
  
  activate_character(70, benedick);
     eb5:	48 89 ee             	mov    rsi,rbp
     eb8:	bf 46 00 00 00       	mov    edi,0x46
     ebd:	e8 ce 03 00 00       	call   1290 <activate_character>
  assign(68, second_person, int_add(68, value_of(68, second_person), (-1)));
     ec2:	48 8b 35 87 31 20 00 	mov    rsi,QWORD PTR [rip+0x203187]        # 204050 <second_person>
     ec9:	bf 44 00 00 00       	mov    edi,0x44
     ece:	e8 3d 0c 00 00       	call   1b10 <value_of>
     ed3:	ba ff ff ff ff       	mov    edx,0xffffffff
     ed8:	89 c6                	mov    esi,eax
     eda:	bf 44 00 00 00       	mov    edi,0x44
     edf:	e8 6c 07 00 00       	call   1650 <int_add>
     ee4:	48 8b 35 65 31 20 00 	mov    rsi,QWORD PTR [rip+0x203165]        # 204050 <second_person>
     eeb:	89 c2                	mov    edx,eax
     eed:	bf 44 00 00 00       	mov    edi,0x44
     ef2:	e8 49 04 00 00       	call   1340 <assign>
  
  exit_scene(70, beatrice);
     ef7:	48 89 de             	mov    rsi,rbx
     efa:	bf 46 00 00 00       	mov    edi,0x46
     eff:	e8 fc 05 00 00       	call   1500 <exit_scene>
  
  enter_scene(71, don_john);
     f04:	4c 89 e6             	mov    rsi,r12
     f07:	bf 47 00 00 00       	mov    edi,0x47
     f0c:	e8 9f 05 00 00       	call   14b0 <enter_scene>
  
  activate_character(76, benedick);
     f11:	48 89 ee             	mov    rsi,rbp
     f14:	bf 4c 00 00 00       	mov    edi,0x4c
     f19:	e8 72 03 00 00       	call   1290 <activate_character>
  assign(74, second_person, value_of(74, first_person));
     f1e:	48 8b 35 4b 31 20 00 	mov    rsi,QWORD PTR [rip+0x20314b]        # 204070 <first_person>
     f25:	bf 4a 00 00 00       	mov    edi,0x4a
     f2a:	e8 e1 0b 00 00       	call   1b10 <value_of>
     f2f:	48 8b 35 1a 31 20 00 	mov    rsi,QWORD PTR [rip+0x20311a]        # 204050 <second_person>
     f36:	89 c2                	mov    edx,eax
     f38:	bf 4a 00 00 00       	mov    edi,0x4a
     f3d:	e8 fe 03 00 00       	call   1340 <assign>
  
  exit_scene(76, don_john);
     f42:	4c 89 e6             	mov    rsi,r12
     f45:	bf 4c 00 00 00       	mov    edi,0x4c
     f4a:	e8 b1 05 00 00       	call   1500 <exit_scene>
  
  enter_scene(77, don_pedro);
     f4f:	4c 89 f6             	mov    rsi,r14
     f52:	bf 4d 00 00 00       	mov    edi,0x4d
     f57:	e8 54 05 00 00       	call   14b0 <enter_scene>
  
  activate_character(83, don_pedro);
     f5c:	4c 89 f6             	mov    rsi,r14
     f5f:	bf 53 00 00 00       	mov    edi,0x53
     f64:	e8 27 03 00 00       	call   1290 <activate_character>
  assign(80, second_person, int_add(80, value_of(80, second_person), value_of(80, first_person)));
     f69:	48 8b 35 00 31 20 00 	mov    rsi,QWORD PTR [rip+0x203100]        # 204070 <first_person>
     f70:	bf 50 00 00 00       	mov    edi,0x50
     f75:	e8 96 0b 00 00       	call   1b10 <value_of>
     f7a:	48 8b 35 cf 30 20 00 	mov    rsi,QWORD PTR [rip+0x2030cf]        # 204050 <second_person>
     f81:	41 89 c7             	mov    r15d,eax
     f84:	bf 50 00 00 00       	mov    edi,0x50
     f89:	e8 82 0b 00 00       	call   1b10 <value_of>
     f8e:	44 89 fa             	mov    edx,r15d
     f91:	89 c6                	mov    esi,eax
     f93:	bf 50 00 00 00       	mov    edi,0x50
     f98:	e8 b3 06 00 00       	call   1650 <int_add>
     f9d:	48 8b 35 ac 30 20 00 	mov    rsi,QWORD PTR [rip+0x2030ac]        # 204050 <second_person>
     fa4:	89 c2                	mov    edx,eax
     fa6:	bf 50 00 00 00       	mov    edi,0x50
     fab:	e8 90 03 00 00       	call   1340 <assign>
  assign(81, second_person, int_mod(81, value_of(81, second_person), cleopatra->value));
     fb0:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
     fb5:	48 8b 35 94 30 20 00 	mov    rsi,QWORD PTR [rip+0x203094]        # 204050 <second_person>
     fbc:	bf 51 00 00 00       	mov    edi,0x51
     fc1:	44 8b 38             	mov    r15d,DWORD PTR [rax]
     fc4:	e8 47 0b 00 00       	call   1b10 <value_of>
     fc9:	bf 51 00 00 00       	mov    edi,0x51
     fce:	89 c6                	mov    esi,eax
     fd0:	44 89 fa             	mov    edx,r15d
     fd3:	e8 98 08 00 00       	call   1870 <int_mod>
     fd8:	48 8b 35 71 30 20 00 	mov    rsi,QWORD PTR [rip+0x203071]        # 204050 <second_person>
     fdf:	89 c2                	mov    edx,eax
     fe1:	bf 51 00 00 00       	mov    edi,0x51
     fe6:	e8 55 03 00 00       	call   1340 <assign>
  
  exit_scene(83, benedick);
     feb:	48 89 ee             	mov    rsi,rbp
     fee:	bf 53 00 00 00       	mov    edi,0x53
     ff3:	e8 08 05 00 00       	call   1500 <exit_scene>
  
  enter_scene(84, don_john);
     ff8:	4c 89 e6             	mov    rsi,r12
     ffb:	bf 54 00 00 00       	mov    edi,0x54
    1000:	e8 ab 04 00 00       	call   14b0 <enter_scene>
  
  activate_character(89, don_john);
    1005:	4c 89 e6             	mov    rsi,r12
    1008:	bf 59 00 00 00       	mov    edi,0x59
    100d:	e8 7e 02 00 00       	call   1290 <activate_character>
  assign(87, second_person, value_of(87, first_person));
    1012:	48 8b 35 57 30 20 00 	mov    rsi,QWORD PTR [rip+0x203057]        # 204070 <first_person>
    1019:	bf 57 00 00 00       	mov    edi,0x57
    101e:	e8 ed 0a 00 00       	call   1b10 <value_of>
    1023:	48 8b 35 26 30 20 00 	mov    rsi,QWORD PTR [rip+0x203026]        # 204050 <second_person>
    102a:	89 c2                	mov    edx,eax
    102c:	bf 57 00 00 00       	mov    edi,0x57
    1031:	e8 0a 03 00 00       	call   1340 <assign>
  
  exit_scene_all(89);
    1036:	bf 59 00 00 00       	mov    edi,0x59
    103b:	e8 10 05 00 00       	call   1550 <exit_scene_all>
  
  enter_scene(90, beatrice);
    1040:	48 89 de             	mov    rsi,rbx
    1043:	bf 5a 00 00 00       	mov    edi,0x5a
    1048:	e8 63 04 00 00       	call   14b0 <enter_scene>
  enter_scene(90, benedick);
    104d:	48 89 ee             	mov    rsi,rbp
    1050:	bf 5a 00 00 00       	mov    edi,0x5a
    1055:	e8 56 04 00 00       	call   14b0 <enter_scene>
  
  activate_character(95, beatrice);
    105a:	48 89 de             	mov    rsi,rbx
    105d:	bf 5f 00 00 00       	mov    edi,0x5f
    1062:	e8 29 02 00 00       	call   1290 <activate_character>
  assign(93, second_person, int_add(93, value_of(93, second_person), achilles->value));
    1067:	45 8b 7d 00          	mov    r15d,DWORD PTR [r13+0x0]
    106b:	48 8b 35 de 2f 20 00 	mov    rsi,QWORD PTR [rip+0x202fde]        # 204050 <second_person>
    1072:	bf 5d 00 00 00       	mov    edi,0x5d
    1077:	e8 94 0a 00 00       	call   1b10 <value_of>
    107c:	44 89 fa             	mov    edx,r15d
    107f:	89 c6                	mov    esi,eax
    1081:	bf 5d 00 00 00       	mov    edi,0x5d
    1086:	e8 c5 05 00 00       	call   1650 <int_add>
    108b:	48 8b 35 be 2f 20 00 	mov    rsi,QWORD PTR [rip+0x202fbe]        # 204050 <second_person>
    1092:	89 c2                	mov    edx,eax
    1094:	bf 5d 00 00 00       	mov    edi,0x5d
    1099:	e8 a2 02 00 00       	call   1340 <assign>
  char_output(93, second_person);
    109e:	48 8b 35 ab 2f 20 00 	mov    rsi,QWORD PTR [rip+0x202fab]        # 204050 <second_person>
    10a5:	bf 5d 00 00 00       	mov    edi,0x5d
    10aa:	e8 51 03 00 00       	call   1400 <char_output>
  
  activate_character(98, benedick);
    10af:	48 89 ee             	mov    rsi,rbp
    10b2:	bf 62 00 00 00       	mov    edi,0x62
    10b7:	e8 d4 01 00 00       	call   1290 <activate_character>
  comp1 = value_of(96, second_person);
    10bc:	48 8b 35 8d 2f 20 00 	mov    rsi,QWORD PTR [rip+0x202f8d]        # 204050 <second_person>
    10c3:	bf 60 00 00 00       	mov    edi,0x60
    10c8:	e8 43 0a 00 00       	call   1b10 <value_of>
  comp2 = 0;
  truth_flag = (comp1 > comp2);
    10cd:	85 c0                	test   eax,eax
  
  activate_character(101, beatrice);
    10cf:	48 89 de             	mov    rsi,rbx
    10d2:	bf 65 00 00 00       	mov    edi,0x65
  truth_flag = (comp1 > comp2);
    10d7:	0f 9f c0             	setg   al
    10da:	0f b6 c0             	movzx  eax,al
    10dd:	89 05 7d 2f 20 00    	mov    DWORD PTR [rip+0x202f7d],eax        # 204060 <truth_flag>
  activate_character(101, beatrice);
    10e3:	e8 a8 01 00 00       	call   1290 <activate_character>
  if (truth_flag) {
    10e8:	8b 05 72 2f 20 00    	mov    eax,DWORD PTR [rip+0x202f72]        # 204060 <truth_flag>
    10ee:	85 c0                	test   eax,eax
    10f0:	0f 85 6a fd ff ff    	jne    e60 <main+0x2d0>
    goto act_i_scene_iii;
  }
  
  exit_scene_all(101);
    10f6:	bf 65 00 00 00       	mov    edi,0x65
    10fb:	e8 50 04 00 00       	call   1550 <exit_scene_all>
  
  return 0;
}
    1100:	48 83 c4 18          	add    rsp,0x18
    1104:	31 c0                	xor    eax,eax
    1106:	5b                   	pop    rbx
    1107:	5d                   	pop    rbp
    1108:	41 5c                	pop    r12
    110a:	41 5d                	pop    r13
    110c:	41 5e                	pop    r14
    110e:	41 5f                	pop    r15
    1110:	c3                   	ret    
    1111:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1118:	00 00 00 
    111b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <_start>:
    1120:	31 ed                	xor    ebp,ebp
    1122:	49 89 d1             	mov    r9,rdx
    1125:	5e                   	pop    rsi
    1126:	48 89 e2             	mov    rdx,rsp
    1129:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    112d:	50                   	push   rax
    112e:	54                   	push   rsp
    112f:	4c 8d 05 6a 11 00 00 	lea    r8,[rip+0x116a]        # 22a0 <__libc_csu_fini>
    1136:	48 8d 0d f3 10 00 00 	lea    rcx,[rip+0x10f3]        # 2230 <__libc_csu_init>
    113d:	48 8d 3d 4c fa ff ff 	lea    rdi,[rip+0xfffffffffffffa4c]        # b90 <main>
    1144:	ff 15 26 2e 20 00    	call   QWORD PTR [rip+0x202e26]        # 203f70 <__libc_start_main@GLIBC_2.2.5>
    114a:	f4                   	hlt    
    114b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d b9 2e 20 00 	lea    rdi,[rip+0x202eb9]        # 204010 <__TMC_END__>
    1157:	48 8d 05 b9 2e 20 00 	lea    rax,[rip+0x202eb9]        # 204017 <__TMC_END__+0x7>
    115e:	55                   	push   rbp
    115f:	48 29 f8             	sub    rax,rdi
    1162:	48 89 e5             	mov    rbp,rsp
    1165:	48 83 f8 0e          	cmp    rax,0xe
    1169:	76 15                	jbe    1180 <deregister_tm_clones+0x30>
    116b:	48 8b 05 de 2d 20 00 	mov    rax,QWORD PTR [rip+0x202dde]        # 203f50 <_ITM_deregisterTMCloneTable>
    1172:	48 85 c0             	test   rax,rax
    1175:	74 09                	je     1180 <deregister_tm_clones+0x30>
    1177:	5d                   	pop    rbp
    1178:	ff e0                	jmp    rax
    117a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1180:	5d                   	pop    rbp
    1181:	c3                   	ret    
    1182:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1186:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    118d:	00 00 00 

0000000000001190 <register_tm_clones>:
    1190:	48 8d 3d 79 2e 20 00 	lea    rdi,[rip+0x202e79]        # 204010 <__TMC_END__>
    1197:	48 8d 35 72 2e 20 00 	lea    rsi,[rip+0x202e72]        # 204010 <__TMC_END__>
    119e:	55                   	push   rbp
    119f:	48 29 fe             	sub    rsi,rdi
    11a2:	48 89 e5             	mov    rbp,rsp
    11a5:	48 c1 fe 03          	sar    rsi,0x3
    11a9:	48 89 f0             	mov    rax,rsi
    11ac:	48 c1 e8 3f          	shr    rax,0x3f
    11b0:	48 01 c6             	add    rsi,rax
    11b3:	48 d1 fe             	sar    rsi,1
    11b6:	74 18                	je     11d0 <register_tm_clones+0x40>
    11b8:	48 8b 05 11 2e 20 00 	mov    rax,QWORD PTR [rip+0x202e11]        # 203fd0 <_ITM_registerTMCloneTable>
    11bf:	48 85 c0             	test   rax,rax
    11c2:	74 0c                	je     11d0 <register_tm_clones+0x40>
    11c4:	5d                   	pop    rbp
    11c5:	ff e0                	jmp    rax
    11c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    11ce:	00 00 
    11d0:	5d                   	pop    rbp
    11d1:	c3                   	ret    
    11d2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    11d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    11dd:	00 00 00 

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d 61 2e 20 00 00 	cmp    BYTE PTR [rip+0x202e61],0x0        # 204048 <completed.7561>
    11e7:	75 27                	jne    1210 <__do_global_dtors_aux+0x30>
    11e9:	48 83 3d ef 2d 20 00 	cmp    QWORD PTR [rip+0x202def],0x0        # 203fe0 <__cxa_finalize@GLIBC_2.2.5>
    11f0:	00 
    11f1:	55                   	push   rbp
    11f2:	48 89 e5             	mov    rbp,rsp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d 0a 2e 20 00 	mov    rdi,QWORD PTR [rip+0x202e0a]        # 204008 <__dso_handle>
    11fe:	e8 6d f9 ff ff       	call   b70 <.plt.got+0x80>
    1203:	e8 48 ff ff ff       	call   1150 <deregister_tm_clones>
    1208:	5d                   	pop    rbp
    1209:	c6 05 38 2e 20 00 01 	mov    BYTE PTR [rip+0x202e38],0x1        # 204048 <completed.7561>
    1210:	f3 c3                	repz ret 
    1212:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1216:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    121d:	00 00 00 

0000000000001220 <frame_dummy>:
    1220:	48 8d 3d 21 2b 20 00 	lea    rdi,[rip+0x202b21]        # 203d48 <__JCR_END__>
    1227:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
    122b:	75 0b                	jne    1238 <frame_dummy+0x18>
    122d:	e9 5e ff ff ff       	jmp    1190 <register_tm_clones>
    1232:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1238:	48 8b 05 79 2d 20 00 	mov    rax,QWORD PTR [rip+0x202d79]        # 203fb8 <_Jv_RegisterClasses>
    123f:	48 85 c0             	test   rax,rax
    1242:	74 e9                	je     122d <frame_dummy+0xd>
    1244:	55                   	push   rbp
    1245:	48 89 e5             	mov    rbp,rsp
    1248:	ff d0                	call   rax
    124a:	5d                   	pop    rbp
    124b:	e9 40 ff ff ff       	jmp    1190 <register_tm_clones>

0000000000001250 <runtime_error>:
    1250:	89 f9                	mov    ecx,edi
    1252:	48 8b 3d e7 2d 20 00 	mov    rdi,QWORD PTR [rip+0x202de7]        # 204040 <stderr@@GLIBC_2.2.5>
    1259:	53                   	push   rbx
    125a:	48 8d 15 8f 10 00 00 	lea    rdx,[rip+0x108f]        # 22f0 <_IO_stdin_used+0x40>
    1261:	49 89 f0             	mov    r8,rsi
    1264:	48 89 f3             	mov    rbx,rsi
    1267:	31 c0                	xor    eax,eax
    1269:	be 01 00 00 00       	mov    esi,0x1
    126e:	e8 ed f8 ff ff       	call   b60 <.plt.got+0x70>
    1273:	48 89 df             	mov    rdi,rbx
    1276:	e8 7d f8 ff ff       	call   af8 <.plt.got+0x8>
    127b:	bf 01 00 00 00       	mov    edi,0x1
    1280:	e8 d3 f8 ff ff       	call   b58 <.plt.got+0x68>
    1285:	90                   	nop
    1286:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    128d:	00 00 00 

0000000000001290 <activate_character>:
    1290:	8b 46 10             	mov    eax,DWORD PTR [rsi+0x10]
    1293:	85 c0                	test   eax,eax
    1295:	74 67                	je     12fe <activate_character+0x6e>
    1297:	83 3d c6 2d 20 00 02 	cmp    DWORD PTR [rip+0x202dc6],0x2        # 204064 <num_on_stage>
    129e:	74 18                	je     12b8 <activate_character+0x28>
    12a0:	48 c7 05 a5 2d 20 00 	mov    QWORD PTR [rip+0x202da5],0x0        # 204050 <second_person>
    12a7:	00 00 00 00 
    12ab:	48 89 35 be 2d 20 00 	mov    QWORD PTR [rip+0x202dbe],rsi        # 204070 <first_person>
    12b2:	c3                   	ret    
    12b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    12b8:	8b 15 aa 2d 20 00    	mov    edx,DWORD PTR [rip+0x202daa]        # 204068 <num_cast>
    12be:	85 d2                	test   edx,edx
    12c0:	7e e9                	jle    12ab <activate_character+0x1b>
    12c2:	48 8b 05 8f 2d 20 00 	mov    rax,QWORD PTR [rip+0x202d8f]        # 204058 <cast>
    12c9:	83 ea 01             	sub    edx,0x1
    12cc:	48 8d 4c d0 08       	lea    rcx,[rax+rdx*8+0x8]
    12d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    12d8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    12db:	83 7a 10 01          	cmp    DWORD PTR [rdx+0x10],0x1
    12df:	75 0c                	jne    12ed <activate_character+0x5d>
    12e1:	48 39 d6             	cmp    rsi,rdx
    12e4:	74 07                	je     12ed <activate_character+0x5d>
    12e6:	48 89 15 63 2d 20 00 	mov    QWORD PTR [rip+0x202d63],rdx        # 204050 <second_person>
    12ed:	48 83 c0 08          	add    rax,0x8
    12f1:	48 39 c1             	cmp    rcx,rax
    12f4:	75 e2                	jne    12d8 <activate_character+0x48>
    12f6:	48 89 35 73 2d 20 00 	mov    QWORD PTR [rip+0x202d73],rsi        # 204070 <first_person>
    12fd:	c3                   	ret    
    12fe:	41 54                	push   r12
    1300:	55                   	push   rbp
    1301:	89 fd                	mov    ebp,edi
    1303:	53                   	push   rbx
    1304:	48 8d 3d 05 10 00 00 	lea    rdi,[rip+0x1005]        # 2310 <_IO_stdin_used+0x60>
    130b:	48 89 f3             	mov    rbx,rsi
    130e:	e8 8d 0b 00 00       	call   1ea0 <newstr>
    1313:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    1317:	49 89 c4             	mov    r12,rax
    131a:	e8 81 0b 00 00       	call   1ea0 <newstr>
    131f:	4c 89 e6             	mov    rsi,r12
    1322:	48 89 c7             	mov    rdi,rax
    1325:	e8 36 08 00 00       	call   1b60 <cat2>
    132a:	89 ef                	mov    edi,ebp
    132c:	48 89 c6             	mov    rsi,rax
    132f:	e8 1c ff ff ff       	call   1250 <runtime_error>
    1334:	66 90                	xchg   ax,ax
    1336:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    133d:	00 00 00 

0000000000001340 <assign>:
    1340:	48 85 f6             	test   rsi,rsi
    1343:	74 0b                	je     1350 <assign+0x10>
    1345:	89 16                	mov    DWORD PTR [rsi],edx
    1347:	c3                   	ret    
    1348:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    134f:	00 
    1350:	83 3d 0d 2d 20 00 01 	cmp    DWORD PTR [rip+0x202d0d],0x1        # 204064 <num_on_stage>
    1357:	53                   	push   rbx
    1358:	89 fb                	mov    ebx,edi
    135a:	74 1c                	je     1378 <assign+0x38>
    135c:	48 8d 3d 2d 10 00 00 	lea    rdi,[rip+0x102d]        # 2390 <_IO_stdin_used+0xe0>
    1363:	e8 38 0b 00 00       	call   1ea0 <newstr>
    1368:	89 df                	mov    edi,ebx
    136a:	48 89 c6             	mov    rsi,rax
    136d:	e8 de fe ff ff       	call   1250 <runtime_error>
    1372:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1378:	48 8d 3d c1 0f 00 00 	lea    rdi,[rip+0xfc1]        # 2340 <_IO_stdin_used+0x90>
    137f:	e8 1c 0b 00 00       	call   1ea0 <newstr>
    1384:	89 df                	mov    edi,ebx
    1386:	48 89 c6             	mov    rsi,rax
    1389:	e8 c2 fe ff ff       	call   1250 <runtime_error>
    138e:	66 90                	xchg   ax,ax

0000000000001390 <char_input>:
    1390:	55                   	push   rbp
    1391:	53                   	push   rbx
    1392:	48 83 ec 08          	sub    rsp,0x8
    1396:	48 85 f6             	test   rsi,rsi
    1399:	74 1d                	je     13b8 <char_input+0x28>
    139b:	48 8b 3d 8e 2c 20 00 	mov    rdi,QWORD PTR [rip+0x202c8e]        # 204030 <stdin@@GLIBC_2.2.5>
    13a2:	48 89 f3             	mov    rbx,rsi
    13a5:	e8 96 f7 ff ff       	call   b40 <.plt.got+0x50>
    13aa:	89 03                	mov    DWORD PTR [rbx],eax
    13ac:	48 83 c4 08          	add    rsp,0x8
    13b0:	5b                   	pop    rbx
    13b1:	5d                   	pop    rbp
    13b2:	c3                   	ret    
    13b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    13b8:	83 3d a5 2c 20 00 01 	cmp    DWORD PTR [rip+0x202ca5],0x1        # 204064 <num_on_stage>
    13bf:	89 fd                	mov    ebp,edi
    13c1:	74 1d                	je     13e0 <char_input+0x50>
    13c3:	48 8d 3d c6 0f 00 00 	lea    rdi,[rip+0xfc6]        # 2390 <_IO_stdin_used+0xe0>
    13ca:	e8 d1 0a 00 00       	call   1ea0 <newstr>
    13cf:	89 ef                	mov    edi,ebp
    13d1:	48 89 c6             	mov    rsi,rax
    13d4:	e8 77 fe ff ff       	call   1250 <runtime_error>
    13d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    13e0:	48 8d 3d 59 0f 00 00 	lea    rdi,[rip+0xf59]        # 2340 <_IO_stdin_used+0x90>
    13e7:	e8 b4 0a 00 00       	call   1ea0 <newstr>
    13ec:	89 ef                	mov    edi,ebp
    13ee:	48 89 c6             	mov    rsi,rax
    13f1:	e8 5a fe ff ff       	call   1250 <runtime_error>
    13f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    13fd:	00 00 00 

0000000000001400 <char_output>:
    1400:	41 54                	push   r12
    1402:	55                   	push   rbp
    1403:	53                   	push   rbx
    1404:	89 fb                	mov    ebx,edi
    1406:	48 83 ec 10          	sub    rsp,0x10
    140a:	48 85 f6             	test   rsi,rsi
    140d:	74 21                	je     1430 <char_output+0x30>
    140f:	8b 3e                	mov    edi,DWORD PTR [rsi]
    1411:	81 ff ff 00 00 00    	cmp    edi,0xff
    1417:	77 4d                	ja     1466 <char_output+0x66>
    1419:	48 8b 35 00 2c 20 00 	mov    rsi,QWORD PTR [rip+0x202c00]        # 204020 <stdout@@GLIBC_2.2.5>
    1420:	48 83 c4 10          	add    rsp,0x10
    1424:	5b                   	pop    rbx
    1425:	5d                   	pop    rbp
    1426:	41 5c                	pop    r12
    1428:	e9 eb f6 ff ff       	jmp    b18 <.plt.got+0x28>
    142d:	0f 1f 00             	nop    DWORD PTR [rax]
    1430:	83 3d 2d 2c 20 00 01 	cmp    DWORD PTR [rip+0x202c2d],0x1        # 204064 <num_on_stage>
    1437:	74 17                	je     1450 <char_output+0x50>
    1439:	48 8d 3d 50 0f 00 00 	lea    rdi,[rip+0xf50]        # 2390 <_IO_stdin_used+0xe0>
    1440:	e8 5b 0a 00 00       	call   1ea0 <newstr>
    1445:	89 df                	mov    edi,ebx
    1447:	48 89 c6             	mov    rsi,rax
    144a:	e8 01 fe ff ff       	call   1250 <runtime_error>
    144f:	90                   	nop
    1450:	48 8d 3d e9 0e 00 00 	lea    rdi,[rip+0xee9]        # 2340 <_IO_stdin_used+0x90>
    1457:	e8 44 0a 00 00       	call   1ea0 <newstr>
    145c:	89 df                	mov    edi,ebx
    145e:	48 89 c6             	mov    rsi,rax
    1461:	e8 ea fd ff ff       	call   1250 <runtime_error>
    1466:	48 8d 3d 7b 0f 00 00 	lea    rdi,[rip+0xf7b]        # 23e8 <_IO_stdin_used+0x138>
    146d:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
    1472:	e8 29 0a 00 00       	call   1ea0 <newstr>
    1477:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    147c:	49 89 c4             	mov    r12,rax
    147f:	8b 3e                	mov    edi,DWORD PTR [rsi]
    1481:	e8 da 09 00 00       	call   1e60 <int2str>
    1486:	48 8d 3d 5b 11 00 00 	lea    rdi,[rip+0x115b]        # 25e8 <_IO_stdin_used+0x338>
    148d:	48 89 c5             	mov    rbp,rax
    1490:	e8 0b 0a 00 00       	call   1ea0 <newstr>
    1495:	48 89 ee             	mov    rsi,rbp
    1498:	48 89 c7             	mov    rdi,rax
    149b:	4c 89 e2             	mov    rdx,r12
    149e:	e8 2d 07 00 00       	call   1bd0 <cat3>
    14a3:	89 df                	mov    edi,ebx
    14a5:	48 89 c6             	mov    rsi,rax
    14a8:	e8 a3 fd ff ff       	call   1250 <runtime_error>
    14ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000014b0 <enter_scene>:
    14b0:	83 7e 10 01          	cmp    DWORD PTR [rsi+0x10],0x1
    14b4:	74 0f                	je     14c5 <enter_scene+0x15>
    14b6:	c7 46 10 01 00 00 00 	mov    DWORD PTR [rsi+0x10],0x1
    14bd:	83 05 a0 2b 20 00 01 	add    DWORD PTR [rip+0x202ba0],0x1        # 204064 <num_on_stage>
    14c4:	c3                   	ret    
    14c5:	41 54                	push   r12
    14c7:	55                   	push   rbp
    14c8:	89 fd                	mov    ebp,edi
    14ca:	53                   	push   rbx
    14cb:	48 8d 3d 3e 0f 00 00 	lea    rdi,[rip+0xf3e]        # 2410 <_IO_stdin_used+0x160>
    14d2:	48 89 f3             	mov    rbx,rsi
    14d5:	e8 c6 09 00 00       	call   1ea0 <newstr>
    14da:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    14de:	49 89 c4             	mov    r12,rax
    14e1:	e8 ba 09 00 00       	call   1ea0 <newstr>
    14e6:	4c 89 e6             	mov    rsi,r12
    14e9:	48 89 c7             	mov    rdi,rax
    14ec:	e8 6f 06 00 00       	call   1b60 <cat2>
    14f1:	89 ef                	mov    edi,ebp
    14f3:	48 89 c6             	mov    rsi,rax
    14f6:	e8 55 fd ff ff       	call   1250 <runtime_error>
    14fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001500 <exit_scene>:
    1500:	8b 46 10             	mov    eax,DWORD PTR [rsi+0x10]
    1503:	85 c0                	test   eax,eax
    1505:	74 0f                	je     1516 <exit_scene+0x16>
    1507:	c7 46 10 00 00 00 00 	mov    DWORD PTR [rsi+0x10],0x0
    150e:	83 2d 4f 2b 20 00 01 	sub    DWORD PTR [rip+0x202b4f],0x1        # 204064 <num_on_stage>
    1515:	c3                   	ret    
    1516:	41 54                	push   r12
    1518:	55                   	push   rbp
    1519:	89 fd                	mov    ebp,edi
    151b:	53                   	push   rbx
    151c:	48 8d 3d 1d 0f 00 00 	lea    rdi,[rip+0xf1d]        # 2440 <_IO_stdin_used+0x190>
    1523:	48 89 f3             	mov    rbx,rsi
    1526:	e8 75 09 00 00       	call   1ea0 <newstr>
    152b:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    152f:	49 89 c4             	mov    r12,rax
    1532:	e8 69 09 00 00       	call   1ea0 <newstr>
    1537:	4c 89 e6             	mov    rsi,r12
    153a:	48 89 c7             	mov    rdi,rax
    153d:	e8 1e 06 00 00       	call   1b60 <cat2>
    1542:	89 ef                	mov    edi,ebp
    1544:	48 89 c6             	mov    rsi,rax
    1547:	e8 04 fd ff ff       	call   1250 <runtime_error>
    154c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001550 <exit_scene_all>:
    1550:	8b 15 12 2b 20 00    	mov    edx,DWORD PTR [rip+0x202b12]        # 204068 <num_cast>
    1556:	85 d2                	test   edx,edx
    1558:	7e 29                	jle    1583 <exit_scene_all+0x33>
    155a:	48 8b 05 f7 2a 20 00 	mov    rax,QWORD PTR [rip+0x202af7]        # 204058 <cast>
    1561:	83 ea 01             	sub    edx,0x1
    1564:	48 8d 4c d0 08       	lea    rcx,[rax+rdx*8+0x8]
    1569:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1570:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    1573:	48 83 c0 08          	add    rax,0x8
    1577:	48 39 c8             	cmp    rax,rcx
    157a:	c7 42 10 00 00 00 00 	mov    DWORD PTR [rdx+0x10],0x0
    1581:	75 ed                	jne    1570 <exit_scene_all+0x20>
    1583:	c7 05 d7 2a 20 00 00 	mov    DWORD PTR [rip+0x202ad7],0x0        # 204064 <num_on_stage>
    158a:	00 00 00 
    158d:	c3                   	ret    
    158e:	66 90                	xchg   ax,ax

0000000000001590 <global_initialize>:
    1590:	48 c7 05 bd 2a 20 00 	mov    QWORD PTR [rip+0x202abd],0x0        # 204058 <cast>
    1597:	00 00 00 00 
    159b:	48 c7 05 ca 2a 20 00 	mov    QWORD PTR [rip+0x202aca],0x0        # 204070 <first_person>
    15a2:	00 00 00 00 
    15a6:	48 c7 05 9f 2a 20 00 	mov    QWORD PTR [rip+0x202a9f],0x0        # 204050 <second_person>
    15ad:	00 00 00 00 
    15b1:	c7 05 a5 2a 20 00 00 	mov    DWORD PTR [rip+0x202aa5],0x0        # 204060 <truth_flag>
    15b8:	00 00 00 
    15bb:	c7 05 9f 2a 20 00 00 	mov    DWORD PTR [rip+0x202a9f],0x0        # 204064 <num_on_stage>
    15c2:	00 00 00 
    15c5:	c7 05 99 2a 20 00 00 	mov    DWORD PTR [rip+0x202a99],0x0        # 204068 <num_cast>
    15cc:	00 00 00 
    15cf:	c3                   	ret    

00000000000015d0 <initialize_character>:
    15d0:	55                   	push   rbp
    15d1:	53                   	push   rbx
    15d2:	48 89 fd             	mov    rbp,rdi
    15d5:	bf 20 00 00 00       	mov    edi,0x20
    15da:	48 83 ec 08          	sub    rsp,0x8
    15de:	e8 55 f5 ff ff       	call   b38 <.plt.got+0x48>
    15e3:	48 89 ef             	mov    rdi,rbp
    15e6:	48 89 c3             	mov    rbx,rax
    15e9:	e8 b2 08 00 00       	call   1ea0 <newstr>
    15ee:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    15f2:	8b 05 70 2a 20 00    	mov    eax,DWORD PTR [rip+0x202a70]        # 204068 <num_cast>
    15f8:	48 8b 3d 59 2a 20 00 	mov    rdi,QWORD PTR [rip+0x202a59]        # 204058 <cast>
    15ff:	c7 43 10 00 00 00 00 	mov    DWORD PTR [rbx+0x10],0x0
    1606:	48 c7 43 18 00 00 00 	mov    QWORD PTR [rbx+0x18],0x0
    160d:	00 
    160e:	c7 03 00 00 00 00    	mov    DWORD PTR [rbx],0x0
    1614:	8d 70 01             	lea    esi,[rax+0x1]
    1617:	89 35 4b 2a 20 00    	mov    DWORD PTR [rip+0x202a4b],esi        # 204068 <num_cast>
    161d:	48 63 f6             	movsxd rsi,esi
    1620:	48 c1 e6 03          	shl    rsi,0x3
    1624:	e8 1f f5 ff ff       	call   b48 <.plt.got+0x58>
    1629:	48 63 15 38 2a 20 00 	movsxd rdx,DWORD PTR [rip+0x202a38]        # 204068 <num_cast>
    1630:	48 89 05 21 2a 20 00 	mov    QWORD PTR [rip+0x202a21],rax        # 204058 <cast>
    1637:	48 89 5c d0 f8       	mov    QWORD PTR [rax+rdx*8-0x8],rbx
    163c:	48 83 c4 08          	add    rsp,0x8
    1640:	48 89 d8             	mov    rax,rbx
    1643:	5b                   	pop    rbx
    1644:	5d                   	pop    rbp
    1645:	c3                   	ret    
    1646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    164d:	00 00 00 

0000000000001650 <int_add>:
    1650:	8d 04 16             	lea    eax,[rsi+rdx*1]
    1653:	c3                   	ret    
    1654:	66 90                	xchg   ax,ax
    1656:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    165d:	00 00 00 

0000000000001660 <int_cube>:
    1660:	89 f0                	mov    eax,esi
    1662:	0f af c6             	imul   eax,esi
    1665:	0f af c6             	imul   eax,esi
    1668:	c3                   	ret    
    1669:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001670 <int_div>:
    1670:	85 d2                	test   edx,edx
    1672:	89 f0                	mov    eax,esi
    1674:	74 06                	je     167c <int_div+0xc>
    1676:	89 d1                	mov    ecx,edx
    1678:	99                   	cdq    
    1679:	f7 f9                	idiv   ecx
    167b:	c3                   	ret    
    167c:	41 54                	push   r12
    167e:	55                   	push   rbp
    167f:	89 fd                	mov    ebp,edi
    1681:	53                   	push   rbx
    1682:	48 8d 3d 6a 0f 00 00 	lea    rdi,[rip+0xf6a]        # 25f3 <_IO_stdin_used+0x343>
    1689:	89 f3                	mov    ebx,esi
    168b:	e8 10 08 00 00       	call   1ea0 <newstr>
    1690:	89 df                	mov    edi,ebx
    1692:	49 89 c4             	mov    r12,rax
    1695:	e8 c6 07 00 00       	call   1e60 <int2str>
    169a:	48 8d 3d 5c 0f 00 00 	lea    rdi,[rip+0xf5c]        # 25fd <_IO_stdin_used+0x34d>
    16a1:	48 89 c3             	mov    rbx,rax
    16a4:	e8 f7 07 00 00       	call   1ea0 <newstr>
    16a9:	48 89 de             	mov    rsi,rbx
    16ac:	48 89 c7             	mov    rdi,rax
    16af:	4c 89 e2             	mov    rdx,r12
    16b2:	e8 19 05 00 00       	call   1bd0 <cat3>
    16b7:	89 ef                	mov    edi,ebp
    16b9:	48 89 c6             	mov    rsi,rax
    16bc:	e8 8f fb ff ff       	call   1250 <runtime_error>
    16c1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    16c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    16cd:	00 00 00 

00000000000016d0 <int_factorial>:
    16d0:	85 f6                	test   esi,esi
    16d2:	78 21                	js     16f5 <int_factorial+0x25>
    16d4:	b8 01 00 00 00       	mov    eax,0x1
    16d9:	74 18                	je     16f3 <int_factorial+0x23>
    16db:	8d 56 ff             	lea    edx,[rsi-0x1]
    16de:	89 f0                	mov    eax,esi
    16e0:	83 fa 01             	cmp    edx,0x1
    16e3:	7e 0e                	jle    16f3 <int_factorial+0x23>
    16e5:	0f 1f 00             	nop    DWORD PTR [rax]
    16e8:	0f af c2             	imul   eax,edx
    16eb:	83 ea 01             	sub    edx,0x1
    16ee:	83 fa 01             	cmp    edx,0x1
    16f1:	75 f5                	jne    16e8 <int_factorial+0x18>
    16f3:	f3 c3                	repz ret 
    16f5:	41 54                	push   r12
    16f7:	55                   	push   rbp
    16f8:	89 fd                	mov    ebp,edi
    16fa:	53                   	push   rbx
    16fb:	48 8d 3d 0d 0f 00 00 	lea    rdi,[rip+0xf0d]        # 260f <_IO_stdin_used+0x35f>
    1702:	89 f3                	mov    ebx,esi
    1704:	e8 97 07 00 00       	call   1ea0 <newstr>
    1709:	89 df                	mov    edi,ebx
    170b:	49 89 c4             	mov    r12,rax
    170e:	e8 4d 07 00 00       	call   1e60 <int2str>
    1713:	48 8d 3d 56 0d 00 00 	lea    rdi,[rip+0xd56]        # 2470 <_IO_stdin_used+0x1c0>
    171a:	48 89 c3             	mov    rbx,rax
    171d:	e8 7e 07 00 00       	call   1ea0 <newstr>
    1722:	48 89 de             	mov    rsi,rbx
    1725:	48 89 c7             	mov    rdi,rax
    1728:	4c 89 e2             	mov    rdx,r12
    172b:	e8 a0 04 00 00       	call   1bd0 <cat3>
    1730:	89 ef                	mov    edi,ebp
    1732:	48 89 c6             	mov    rsi,rax
    1735:	e8 16 fb ff ff       	call   1250 <runtime_error>
    173a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001740 <int_input>:
    1740:	41 55                	push   r13
    1742:	41 54                	push   r12
    1744:	41 89 fc             	mov    r12d,edi
    1747:	55                   	push   rbp
    1748:	53                   	push   rbx
    1749:	48 81 ec 18 04 00 00 	sub    rsp,0x418
    1750:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1757:	00 00 
    1759:	48 89 84 24 08 04 00 	mov    QWORD PTR [rsp+0x408],rax
    1760:	00 
    1761:	31 c0                	xor    eax,eax
    1763:	48 85 f6             	test   rsi,rsi
    1766:	0f 84 b4 00 00 00    	je     1820 <int_input+0xe0>
    176c:	48 8b 15 bd 28 20 00 	mov    rdx,QWORD PTR [rip+0x2028bd]        # 204030 <stdin@@GLIBC_2.2.5>
    1773:	48 89 e7             	mov    rdi,rsp
    1776:	48 89 f3             	mov    rbx,rsi
    1779:	be 00 04 00 00       	mov    esi,0x400
    177e:	e8 9d f3 ff ff       	call   b20 <.plt.got+0x30>
    1783:	e8 78 f3 ff ff       	call   b00 <.plt.got+0x10>
    1788:	31 f6                	xor    esi,esi
    178a:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    1790:	ba 0a 00 00 00       	mov    edx,0xa
    1795:	48 89 e7             	mov    rdi,rsp
    1798:	49 89 c5             	mov    r13,rax
    179b:	e8 88 f3 ff ff       	call   b28 <.plt.got+0x38>
    17a0:	48 85 c0             	test   rax,rax
    17a3:	74 3b                	je     17e0 <int_input+0xa0>
    17a5:	ba 00 00 00 80       	mov    edx,0x80000000
    17aa:	b9 ff ff ff ff       	mov    ecx,0xffffffff
    17af:	48 01 c2             	add    rdx,rax
    17b2:	48 39 ca             	cmp    rdx,rcx
    17b5:	77 37                	ja     17ee <int_input+0xae>
    17b7:	89 03                	mov    DWORD PTR [rbx],eax
    17b9:	48 8b 84 24 08 04 00 	mov    rax,QWORD PTR [rsp+0x408]
    17c0:	00 
    17c1:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    17c8:	00 00 
    17ca:	0f 85 97 00 00 00    	jne    1867 <int_input+0x127>
    17d0:	48 81 c4 18 04 00 00 	add    rsp,0x418
    17d7:	5b                   	pop    rbx
    17d8:	5d                   	pop    rbp
    17d9:	41 5c                	pop    r12
    17db:	41 5d                	pop    r13
    17dd:	c3                   	ret    
    17de:	66 90                	xchg   ax,ax
    17e0:	41 8b 55 00          	mov    edx,DWORD PTR [r13+0x0]
    17e4:	83 fa 16             	cmp    edx,0x16
    17e7:	74 57                	je     1840 <int_input+0x100>
    17e9:	83 fa 22             	cmp    edx,0x22
    17ec:	75 b7                	jne    17a5 <int_input+0x65>
    17ee:	48 8d 3d db 0c 00 00 	lea    rdi,[rip+0xcdb]        # 24d0 <_IO_stdin_used+0x220>
    17f5:	e8 a6 06 00 00       	call   1ea0 <newstr>
    17fa:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    17fe:	48 89 c5             	mov    rbp,rax
    1801:	e8 9a 06 00 00       	call   1ea0 <newstr>
    1806:	48 89 ee             	mov    rsi,rbp
    1809:	48 89 c7             	mov    rdi,rax
    180c:	e8 4f 03 00 00       	call   1b60 <cat2>
    1811:	44 89 e7             	mov    edi,r12d
    1814:	48 89 c6             	mov    rsi,rax
    1817:	e8 34 fa ff ff       	call   1250 <runtime_error>
    181c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1820:	83 3d 3d 28 20 00 01 	cmp    DWORD PTR [rip+0x20283d],0x1        # 204064 <num_on_stage>
    1827:	74 27                	je     1850 <int_input+0x110>
    1829:	48 8d 3d 60 0b 00 00 	lea    rdi,[rip+0xb60]        # 2390 <_IO_stdin_used+0xe0>
    1830:	e8 6b 06 00 00       	call   1ea0 <newstr>
    1835:	44 89 e7             	mov    edi,r12d
    1838:	48 89 c6             	mov    rsi,rax
    183b:	e8 10 fa ff ff       	call   1250 <runtime_error>
    1840:	48 8d 3d 49 0c 00 00 	lea    rdi,[rip+0xc49]        # 2490 <_IO_stdin_used+0x1e0>
    1847:	eb ac                	jmp    17f5 <int_input+0xb5>
    1849:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1850:	48 8d 3d e9 0a 00 00 	lea    rdi,[rip+0xae9]        # 2340 <_IO_stdin_used+0x90>
    1857:	e8 44 06 00 00       	call   1ea0 <newstr>
    185c:	44 89 e7             	mov    edi,r12d
    185f:	48 89 c6             	mov    rsi,rax
    1862:	e8 e9 f9 ff ff       	call   1250 <runtime_error>
    1867:	e8 a4 f2 ff ff       	call   b10 <.plt.got+0x20>
    186c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001870 <int_mod>:
    1870:	85 d2                	test   edx,edx
    1872:	89 f0                	mov    eax,esi
    1874:	74 08                	je     187e <int_mod+0xe>
    1876:	89 d1                	mov    ecx,edx
    1878:	99                   	cdq    
    1879:	f7 f9                	idiv   ecx
    187b:	89 d0                	mov    eax,edx
    187d:	c3                   	ret    
    187e:	41 54                	push   r12
    1880:	55                   	push   rbp
    1881:	89 fd                	mov    ebp,edi
    1883:	53                   	push   rbx
    1884:	48 8d 3d 68 0d 00 00 	lea    rdi,[rip+0xd68]        # 25f3 <_IO_stdin_used+0x343>
    188b:	89 f3                	mov    ebx,esi
    188d:	e8 0e 06 00 00       	call   1ea0 <newstr>
    1892:	89 df                	mov    edi,ebx
    1894:	49 89 c4             	mov    r12,rax
    1897:	e8 c4 05 00 00       	call   1e60 <int2str>
    189c:	48 8d 3d 5a 0d 00 00 	lea    rdi,[rip+0xd5a]        # 25fd <_IO_stdin_used+0x34d>
    18a3:	48 89 c3             	mov    rbx,rax
    18a6:	e8 f5 05 00 00       	call   1ea0 <newstr>
    18ab:	48 89 de             	mov    rsi,rbx
    18ae:	48 89 c7             	mov    rdi,rax
    18b1:	4c 89 e2             	mov    rdx,r12
    18b4:	e8 17 03 00 00       	call   1bd0 <cat3>
    18b9:	89 ef                	mov    edi,ebp
    18bb:	48 89 c6             	mov    rsi,rax
    18be:	e8 8d f9 ff ff       	call   1250 <runtime_error>
    18c3:	0f 1f 00             	nop    DWORD PTR [rax]
    18c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    18cd:	00 00 00 

00000000000018d0 <int_mul>:
    18d0:	89 f0                	mov    eax,esi
    18d2:	0f af c2             	imul   eax,edx
    18d5:	c3                   	ret    
    18d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    18dd:	00 00 00 

00000000000018e0 <int_output>:
    18e0:	48 85 f6             	test   rsi,rsi
    18e3:	74 1b                	je     1900 <int_output+0x20>
    18e5:	8b 16                	mov    edx,DWORD PTR [rsi]
    18e7:	48 8d 35 39 0d 00 00 	lea    rsi,[rip+0xd39]        # 2627 <_IO_stdin_used+0x377>
    18ee:	bf 01 00 00 00       	mov    edi,0x1
    18f3:	31 c0                	xor    eax,eax
    18f5:	e9 56 f2 ff ff       	jmp    b50 <.plt.got+0x60>
    18fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1900:	83 3d 5d 27 20 00 01 	cmp    DWORD PTR [rip+0x20275d],0x1        # 204064 <num_on_stage>
    1907:	53                   	push   rbx
    1908:	89 fb                	mov    ebx,edi
    190a:	74 1c                	je     1928 <int_output+0x48>
    190c:	48 8d 3d 7d 0a 00 00 	lea    rdi,[rip+0xa7d]        # 2390 <_IO_stdin_used+0xe0>
    1913:	e8 88 05 00 00       	call   1ea0 <newstr>
    1918:	89 df                	mov    edi,ebx
    191a:	48 89 c6             	mov    rsi,rax
    191d:	e8 2e f9 ff ff       	call   1250 <runtime_error>
    1922:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1928:	48 8d 3d 11 0a 00 00 	lea    rdi,[rip+0xa11]        # 2340 <_IO_stdin_used+0x90>
    192f:	e8 6c 05 00 00       	call   1ea0 <newstr>
    1934:	89 df                	mov    edi,ebx
    1936:	48 89 c6             	mov    rsi,rax
    1939:	e8 12 f9 ff ff       	call   1250 <runtime_error>
    193e:	66 90                	xchg   ax,ax

0000000000001940 <int_sqrt>:
    1940:	41 54                	push   r12
    1942:	55                   	push   rbp
    1943:	53                   	push   rbx
    1944:	48 83 ec 10          	sub    rsp,0x10
    1948:	85 f6                	test   esi,esi
    194a:	78 36                	js     1982 <int_sqrt+0x42>
    194c:	66 0f ef c0          	pxor   xmm0,xmm0
    1950:	66 0f ef d2          	pxor   xmm2,xmm2
    1954:	f2 0f 2a c6          	cvtsi2sd xmm0,esi
    1958:	66 0f 2e d0          	ucomisd xmm2,xmm0
    195c:	f2 0f 51 c8          	sqrtsd xmm1,xmm0
    1960:	77 0d                	ja     196f <int_sqrt+0x2f>
    1962:	48 83 c4 10          	add    rsp,0x10
    1966:	f2 0f 2c c1          	cvttsd2si eax,xmm1
    196a:	5b                   	pop    rbx
    196b:	5d                   	pop    rbp
    196c:	41 5c                	pop    r12
    196e:	c3                   	ret    
    196f:	f2 0f 11 4c 24 08    	movsd  QWORD PTR [rsp+0x8],xmm1
    1975:	e8 ee f1 ff ff       	call   b68 <.plt.got+0x78>
    197a:	f2 0f 10 4c 24 08    	movsd  xmm1,QWORD PTR [rsp+0x8]
    1980:	eb e0                	jmp    1962 <int_sqrt+0x22>
    1982:	89 fb                	mov    ebx,edi
    1984:	48 8d 3d 9f 0c 00 00 	lea    rdi,[rip+0xc9f]        # 262a <_IO_stdin_used+0x37a>
    198b:	89 74 24 08          	mov    DWORD PTR [rsp+0x8],esi
    198f:	e8 0c 05 00 00       	call   1ea0 <newstr>
    1994:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
    1998:	49 89 c4             	mov    r12,rax
    199b:	89 f7                	mov    edi,esi
    199d:	e8 be 04 00 00       	call   1e60 <int2str>
    19a2:	48 8d 3d 5f 0b 00 00 	lea    rdi,[rip+0xb5f]        # 2508 <_IO_stdin_used+0x258>
    19a9:	48 89 c5             	mov    rbp,rax
    19ac:	e8 ef 04 00 00       	call   1ea0 <newstr>
    19b1:	48 89 ee             	mov    rsi,rbp
    19b4:	48 89 c7             	mov    rdi,rax
    19b7:	4c 89 e2             	mov    rdx,r12
    19ba:	e8 11 02 00 00       	call   1bd0 <cat3>
    19bf:	89 df                	mov    edi,ebx
    19c1:	48 89 c6             	mov    rsi,rax
    19c4:	e8 87 f8 ff ff       	call   1250 <runtime_error>
    19c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000019d0 <int_square>:
    19d0:	0f af f6             	imul   esi,esi
    19d3:	89 f0                	mov    eax,esi
    19d5:	c3                   	ret    
    19d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    19dd:	00 00 00 

00000000000019e0 <int_sub>:
    19e0:	89 f0                	mov    eax,esi
    19e2:	29 d0                	sub    eax,edx
    19e4:	c3                   	ret    
    19e5:	90                   	nop
    19e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    19ed:	00 00 00 

00000000000019f0 <int_twice>:
    19f0:	8d 04 36             	lea    eax,[rsi+rsi*1]
    19f3:	c3                   	ret    
    19f4:	66 90                	xchg   ax,ax
    19f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    19fd:	00 00 00 

0000000000001a00 <pop>:
    1a00:	55                   	push   rbp
    1a01:	53                   	push   rbx
    1a02:	89 fb                	mov    ebx,edi
    1a04:	48 83 ec 18          	sub    rsp,0x18
    1a08:	48 85 f6             	test   rsi,rsi
    1a0b:	74 23                	je     1a30 <pop+0x30>
    1a0d:	48 8b 7e 18          	mov    rdi,QWORD PTR [rsi+0x18]
    1a11:	48 85 ff             	test   rdi,rdi
    1a14:	74 50                	je     1a66 <pop+0x66>
    1a16:	8b 07                	mov    eax,DWORD PTR [rdi]
    1a18:	89 06                	mov    DWORD PTR [rsi],eax
    1a1a:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    1a1e:	48 89 46 18          	mov    QWORD PTR [rsi+0x18],rax
    1a22:	48 83 c4 18          	add    rsp,0x18
    1a26:	5b                   	pop    rbx
    1a27:	5d                   	pop    rbp
    1a28:	e9 cb f0 ff ff       	jmp    af8 <.plt.got+0x8>
    1a2d:	0f 1f 00             	nop    DWORD PTR [rax]
    1a30:	83 3d 2d 26 20 00 01 	cmp    DWORD PTR [rip+0x20262d],0x1        # 204064 <num_on_stage>
    1a37:	74 17                	je     1a50 <pop+0x50>
    1a39:	48 8d 3d 38 0b 00 00 	lea    rdi,[rip+0xb38]        # 2578 <_IO_stdin_used+0x2c8>
    1a40:	e8 5b 04 00 00       	call   1ea0 <newstr>
    1a45:	89 df                	mov    edi,ebx
    1a47:	48 89 c6             	mov    rsi,rax
    1a4a:	e8 01 f8 ff ff       	call   1250 <runtime_error>
    1a4f:	90                   	nop
    1a50:	48 8d 3d d9 0a 00 00 	lea    rdi,[rip+0xad9]        # 2530 <_IO_stdin_used+0x280>
    1a57:	e8 44 04 00 00       	call   1ea0 <newstr>
    1a5c:	89 df                	mov    edi,ebx
    1a5e:	48 89 c6             	mov    rsi,rax
    1a61:	e8 ea f7 ff ff       	call   1250 <runtime_error>
    1a66:	48 8d 3d 5b 0b 00 00 	lea    rdi,[rip+0xb5b]        # 25c8 <_IO_stdin_used+0x318>
    1a6d:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
    1a72:	e8 29 04 00 00       	call   1ea0 <newstr>
    1a77:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
    1a7c:	48 89 c5             	mov    rbp,rax
    1a7f:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
    1a83:	e8 18 04 00 00       	call   1ea0 <newstr>
    1a88:	48 89 ee             	mov    rsi,rbp
    1a8b:	48 89 c7             	mov    rdi,rax
    1a8e:	e8 cd 00 00 00       	call   1b60 <cat2>
    1a93:	89 df                	mov    edi,ebx
    1a95:	48 89 c6             	mov    rsi,rax
    1a98:	e8 b3 f7 ff ff       	call   1250 <runtime_error>
    1a9d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001aa0 <push>:
    1aa0:	48 85 f6             	test   rsi,rsi
    1aa3:	41 54                	push   r12
    1aa5:	55                   	push   rbp
    1aa6:	53                   	push   rbx
    1aa7:	74 27                	je     1ad0 <push+0x30>
    1aa9:	48 89 f3             	mov    rbx,rsi
    1aac:	bf 10 00 00 00       	mov    edi,0x10
    1ab1:	89 d5                	mov    ebp,edx
    1ab3:	e8 80 f0 ff ff       	call   b38 <.plt.got+0x48>
    1ab8:	48 8b 53 18          	mov    rdx,QWORD PTR [rbx+0x18]
    1abc:	89 28                	mov    DWORD PTR [rax],ebp
    1abe:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
    1ac2:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    1ac6:	5b                   	pop    rbx
    1ac7:	5d                   	pop    rbp
    1ac8:	41 5c                	pop    r12
    1aca:	c3                   	ret    
    1acb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1ad0:	83 3d 8d 25 20 00 01 	cmp    DWORD PTR [rip+0x20258d],0x1        # 204064 <num_on_stage>
    1ad7:	41 89 fc             	mov    r12d,edi
    1ada:	74 1c                	je     1af8 <push+0x58>
    1adc:	48 8d 3d 95 0a 00 00 	lea    rdi,[rip+0xa95]        # 2578 <_IO_stdin_used+0x2c8>
    1ae3:	e8 b8 03 00 00       	call   1ea0 <newstr>
    1ae8:	44 89 e7             	mov    edi,r12d
    1aeb:	48 89 c6             	mov    rsi,rax
    1aee:	e8 5d f7 ff ff       	call   1250 <runtime_error>
    1af3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1af8:	48 8d 3d 31 0a 00 00 	lea    rdi,[rip+0xa31]        # 2530 <_IO_stdin_used+0x280>
    1aff:	e8 9c 03 00 00       	call   1ea0 <newstr>
    1b04:	44 89 e7             	mov    edi,r12d
    1b07:	48 89 c6             	mov    rsi,rax
    1b0a:	e8 41 f7 ff ff       	call   1250 <runtime_error>
    1b0f:	90                   	nop

0000000000001b10 <value_of>:
    1b10:	48 85 f6             	test   rsi,rsi
    1b13:	74 0b                	je     1b20 <value_of+0x10>
    1b15:	8b 06                	mov    eax,DWORD PTR [rsi]
    1b17:	c3                   	ret    
    1b18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1b1f:	00 
    1b20:	83 3d 3d 25 20 00 01 	cmp    DWORD PTR [rip+0x20253d],0x1        # 204064 <num_on_stage>
    1b27:	53                   	push   rbx
    1b28:	89 fb                	mov    ebx,edi
    1b2a:	74 1c                	je     1b48 <value_of+0x38>
    1b2c:	48 8d 3d 5d 08 00 00 	lea    rdi,[rip+0x85d]        # 2390 <_IO_stdin_used+0xe0>
    1b33:	e8 68 03 00 00       	call   1ea0 <newstr>
    1b38:	89 df                	mov    edi,ebx
    1b3a:	48 89 c6             	mov    rsi,rax
    1b3d:	e8 0e f7 ff ff       	call   1250 <runtime_error>
    1b42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1b48:	48 8d 3d f1 07 00 00 	lea    rdi,[rip+0x7f1]        # 2340 <_IO_stdin_used+0x90>
    1b4f:	e8 4c 03 00 00       	call   1ea0 <newstr>
    1b54:	89 df                	mov    edi,ebx
    1b56:	48 89 c6             	mov    rsi,rax
    1b59:	e8 f2 f6 ff ff       	call   1250 <runtime_error>
    1b5e:	66 90                	xchg   ax,ax

0000000000001b60 <cat2>:
    1b60:	41 56                	push   r14
    1b62:	41 55                	push   r13
    1b64:	49 89 f5             	mov    r13,rsi
    1b67:	41 54                	push   r12
    1b69:	55                   	push   rbp
    1b6a:	49 89 fe             	mov    r14,rdi
    1b6d:	53                   	push   rbx
    1b6e:	e8 95 ef ff ff       	call   b08 <.plt.got+0x18>
    1b73:	4c 89 ef             	mov    rdi,r13
    1b76:	48 89 c3             	mov    rbx,rax
    1b79:	e8 8a ef ff ff       	call   b08 <.plt.got+0x18>
    1b7e:	8d 7c 03 01          	lea    edi,[rbx+rax*1+0x1]
    1b82:	48 89 c5             	mov    rbp,rax
    1b85:	48 63 ff             	movsxd rdi,edi
    1b88:	e8 ab ef ff ff       	call   b38 <.plt.got+0x48>
    1b8d:	48 89 da             	mov    rdx,rbx
    1b90:	49 89 c4             	mov    r12,rax
    1b93:	4c 89 f6             	mov    rsi,r14
    1b96:	48 89 c7             	mov    rdi,rax
    1b99:	e8 92 ef ff ff       	call   b30 <.plt.got+0x40>
    1b9e:	49 8d 3c 1c          	lea    rdi,[r12+rbx*1]
    1ba2:	48 8d 55 01          	lea    rdx,[rbp+0x1]
    1ba6:	4c 89 ee             	mov    rsi,r13
    1ba9:	e8 82 ef ff ff       	call   b30 <.plt.got+0x40>
    1bae:	4c 89 f7             	mov    rdi,r14
    1bb1:	e8 42 ef ff ff       	call   af8 <.plt.got+0x8>
    1bb6:	4c 89 ef             	mov    rdi,r13
    1bb9:	e8 3a ef ff ff       	call   af8 <.plt.got+0x8>
    1bbe:	5b                   	pop    rbx
    1bbf:	4c 89 e0             	mov    rax,r12
    1bc2:	5d                   	pop    rbp
    1bc3:	41 5c                	pop    r12
    1bc5:	41 5d                	pop    r13
    1bc7:	41 5e                	pop    r14
    1bc9:	c3                   	ret    
    1bca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001bd0 <cat3>:
    1bd0:	53                   	push   rbx
    1bd1:	48 89 d3             	mov    rbx,rdx
    1bd4:	e8 87 ff ff ff       	call   1b60 <cat2>
    1bd9:	48 89 de             	mov    rsi,rbx
    1bdc:	48 89 c7             	mov    rdi,rax
    1bdf:	5b                   	pop    rbx
    1be0:	e9 7b ff ff ff       	jmp    1b60 <cat2>
    1be5:	90                   	nop
    1be6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1bed:	00 00 00 

0000000000001bf0 <cat4>:
    1bf0:	41 54                	push   r12
    1bf2:	55                   	push   rbp
    1bf3:	49 89 f4             	mov    r12,rsi
    1bf6:	53                   	push   rbx
    1bf7:	48 89 fd             	mov    rbp,rdi
    1bfa:	48 89 ce             	mov    rsi,rcx
    1bfd:	48 89 d7             	mov    rdi,rdx
    1c00:	e8 5b ff ff ff       	call   1b60 <cat2>
    1c05:	4c 89 e6             	mov    rsi,r12
    1c08:	48 89 c3             	mov    rbx,rax
    1c0b:	48 89 ef             	mov    rdi,rbp
    1c0e:	e8 4d ff ff ff       	call   1b60 <cat2>
    1c13:	48 89 de             	mov    rsi,rbx
    1c16:	48 89 c7             	mov    rdi,rax
    1c19:	5b                   	pop    rbx
    1c1a:	5d                   	pop    rbp
    1c1b:	41 5c                	pop    r12
    1c1d:	e9 3e ff ff ff       	jmp    1b60 <cat2>
    1c22:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1c26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1c2d:	00 00 00 

0000000000001c30 <cat5>:
    1c30:	41 55                	push   r13
    1c32:	41 54                	push   r12
    1c34:	49 89 f5             	mov    r13,rsi
    1c37:	55                   	push   rbp
    1c38:	53                   	push   rbx
    1c39:	48 89 ce             	mov    rsi,rcx
    1c3c:	49 89 fc             	mov    r12,rdi
    1c3f:	48 89 d7             	mov    rdi,rdx
    1c42:	4c 89 c3             	mov    rbx,r8
    1c45:	48 83 ec 08          	sub    rsp,0x8
    1c49:	e8 12 ff ff ff       	call   1b60 <cat2>
    1c4e:	4c 89 ee             	mov    rsi,r13
    1c51:	48 89 c5             	mov    rbp,rax
    1c54:	4c 89 e7             	mov    rdi,r12
    1c57:	e8 04 ff ff ff       	call   1b60 <cat2>
    1c5c:	48 89 ee             	mov    rsi,rbp
    1c5f:	48 89 c7             	mov    rdi,rax
    1c62:	e8 f9 fe ff ff       	call   1b60 <cat2>
    1c67:	48 83 c4 08          	add    rsp,0x8
    1c6b:	48 89 de             	mov    rsi,rbx
    1c6e:	48 89 c7             	mov    rdi,rax
    1c71:	5b                   	pop    rbx
    1c72:	5d                   	pop    rbp
    1c73:	41 5c                	pop    r12
    1c75:	41 5d                	pop    r13
    1c77:	e9 e4 fe ff ff       	jmp    1b60 <cat2>
    1c7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001c80 <cat6>:
    1c80:	41 56                	push   r14
    1c82:	41 55                	push   r13
    1c84:	49 89 ce             	mov    r14,rcx
    1c87:	41 54                	push   r12
    1c89:	55                   	push   rbp
    1c8a:	49 89 fc             	mov    r12,rdi
    1c8d:	53                   	push   rbx
    1c8e:	48 89 d5             	mov    rbp,rdx
    1c91:	4c 89 c7             	mov    rdi,r8
    1c94:	49 89 f5             	mov    r13,rsi
    1c97:	4c 89 ce             	mov    rsi,r9
    1c9a:	e8 c1 fe ff ff       	call   1b60 <cat2>
    1c9f:	4c 89 f6             	mov    rsi,r14
    1ca2:	48 89 ef             	mov    rdi,rbp
    1ca5:	48 89 c3             	mov    rbx,rax
    1ca8:	e8 b3 fe ff ff       	call   1b60 <cat2>
    1cad:	4c 89 ee             	mov    rsi,r13
    1cb0:	48 89 c5             	mov    rbp,rax
    1cb3:	4c 89 e7             	mov    rdi,r12
    1cb6:	e8 a5 fe ff ff       	call   1b60 <cat2>
    1cbb:	48 89 ee             	mov    rsi,rbp
    1cbe:	48 89 c7             	mov    rdi,rax
    1cc1:	e8 9a fe ff ff       	call   1b60 <cat2>
    1cc6:	48 89 de             	mov    rsi,rbx
    1cc9:	48 89 c7             	mov    rdi,rax
    1ccc:	5b                   	pop    rbx
    1ccd:	5d                   	pop    rbp
    1cce:	41 5c                	pop    r12
    1cd0:	41 5d                	pop    r13
    1cd2:	41 5e                	pop    r14
    1cd4:	e9 87 fe ff ff       	jmp    1b60 <cat2>
    1cd9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001ce0 <cat7>:
    1ce0:	41 57                	push   r15
    1ce2:	41 56                	push   r14
    1ce4:	49 89 cf             	mov    r15,rcx
    1ce7:	41 55                	push   r13
    1ce9:	41 54                	push   r12
    1ceb:	49 89 fd             	mov    r13,rdi
    1cee:	55                   	push   rbp
    1cef:	53                   	push   rbx
    1cf0:	4c 89 c7             	mov    rdi,r8
    1cf3:	48 89 d3             	mov    rbx,rdx
    1cf6:	49 89 f6             	mov    r14,rsi
    1cf9:	4c 89 ce             	mov    rsi,r9
    1cfc:	48 83 ec 08          	sub    rsp,0x8
    1d00:	4c 8b 64 24 40       	mov    r12,QWORD PTR [rsp+0x40]
    1d05:	e8 56 fe ff ff       	call   1b60 <cat2>
    1d0a:	4c 89 fe             	mov    rsi,r15
    1d0d:	48 89 df             	mov    rdi,rbx
    1d10:	48 89 c5             	mov    rbp,rax
    1d13:	e8 48 fe ff ff       	call   1b60 <cat2>
    1d18:	4c 89 f6             	mov    rsi,r14
    1d1b:	4c 89 ef             	mov    rdi,r13
    1d1e:	48 89 c3             	mov    rbx,rax
    1d21:	e8 3a fe ff ff       	call   1b60 <cat2>
    1d26:	48 83 c4 08          	add    rsp,0x8
    1d2a:	4c 89 e1             	mov    rcx,r12
    1d2d:	48 89 ea             	mov    rdx,rbp
    1d30:	48 89 de             	mov    rsi,rbx
    1d33:	48 89 c7             	mov    rdi,rax
    1d36:	5b                   	pop    rbx
    1d37:	5d                   	pop    rbp
    1d38:	41 5c                	pop    r12
    1d3a:	41 5d                	pop    r13
    1d3c:	41 5e                	pop    r14
    1d3e:	41 5f                	pop    r15
    1d40:	e9 ab fe ff ff       	jmp    1bf0 <cat4>
    1d45:	90                   	nop
    1d46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1d4d:	00 00 00 

0000000000001d50 <cat8>:
    1d50:	41 57                	push   r15
    1d52:	41 56                	push   r14
    1d54:	49 89 f6             	mov    r14,rsi
    1d57:	41 55                	push   r13
    1d59:	41 54                	push   r12
    1d5b:	49 89 fd             	mov    r13,rdi
    1d5e:	55                   	push   rbp
    1d5f:	53                   	push   rbx
    1d60:	49 89 cf             	mov    r15,rcx
    1d63:	48 89 d3             	mov    rbx,rdx
    1d66:	4c 89 c5             	mov    rbp,r8
    1d69:	48 83 ec 18          	sub    rsp,0x18
    1d6d:	48 8b 74 24 58       	mov    rsi,QWORD PTR [rsp+0x58]
    1d72:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
    1d77:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
    1d7c:	e8 df fd ff ff       	call   1b60 <cat2>
    1d81:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
    1d86:	48 89 ef             	mov    rdi,rbp
    1d89:	49 89 c4             	mov    r12,rax
    1d8c:	4c 89 ce             	mov    rsi,r9
    1d8f:	e8 cc fd ff ff       	call   1b60 <cat2>
    1d94:	4c 89 fe             	mov    rsi,r15
    1d97:	48 89 df             	mov    rdi,rbx
    1d9a:	48 89 c5             	mov    rbp,rax
    1d9d:	e8 be fd ff ff       	call   1b60 <cat2>
    1da2:	4c 89 f6             	mov    rsi,r14
    1da5:	4c 89 ef             	mov    rdi,r13
    1da8:	48 89 c3             	mov    rbx,rax
    1dab:	e8 b0 fd ff ff       	call   1b60 <cat2>
    1db0:	48 83 c4 18          	add    rsp,0x18
    1db4:	4c 89 e1             	mov    rcx,r12
    1db7:	48 89 ea             	mov    rdx,rbp
    1dba:	48 89 de             	mov    rsi,rbx
    1dbd:	48 89 c7             	mov    rdi,rax
    1dc0:	5b                   	pop    rbx
    1dc1:	5d                   	pop    rbp
    1dc2:	41 5c                	pop    r12
    1dc4:	41 5d                	pop    r13
    1dc6:	41 5e                	pop    r14
    1dc8:	41 5f                	pop    r15
    1dca:	e9 21 fe ff ff       	jmp    1bf0 <cat4>
    1dcf:	90                   	nop

0000000000001dd0 <cat9>:
    1dd0:	41 57                	push   r15
    1dd2:	41 56                	push   r14
    1dd4:	4d 89 c7             	mov    r15,r8
    1dd7:	41 55                	push   r13
    1dd9:	41 54                	push   r12
    1ddb:	49 89 f4             	mov    r12,rsi
    1dde:	55                   	push   rbp
    1ddf:	53                   	push   rbx
    1de0:	48 89 fd             	mov    rbp,rdi
    1de3:	49 89 d5             	mov    r13,rdx
    1de6:	49 89 ce             	mov    r14,rcx
    1de9:	48 83 ec 18          	sub    rsp,0x18
    1ded:	48 8b 74 24 58       	mov    rsi,QWORD PTR [rsp+0x58]
    1df2:	48 8b 7c 24 50       	mov    rdi,QWORD PTR [rsp+0x50]
    1df7:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
    1dfc:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
    1e01:	e8 5a fd ff ff       	call   1b60 <cat2>
    1e06:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
    1e0b:	4c 89 ff             	mov    rdi,r15
    1e0e:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    1e12:	4c 89 ce             	mov    rsi,r9
    1e15:	e8 46 fd ff ff       	call   1b60 <cat2>
    1e1a:	4c 89 f6             	mov    rsi,r14
    1e1d:	4c 89 ef             	mov    rdi,r13
    1e20:	49 89 c7             	mov    r15,rax
    1e23:	e8 38 fd ff ff       	call   1b60 <cat2>
    1e28:	4c 89 e6             	mov    rsi,r12
    1e2b:	48 89 ef             	mov    rdi,rbp
    1e2e:	49 89 c5             	mov    r13,rax
    1e31:	e8 2a fd ff ff       	call   1b60 <cat2>
    1e36:	48 8b 0c 24          	mov    rcx,QWORD PTR [rsp]
    1e3a:	48 83 c4 18          	add    rsp,0x18
    1e3e:	49 89 d8             	mov    r8,rbx
    1e41:	4c 89 fa             	mov    rdx,r15
    1e44:	4c 89 ee             	mov    rsi,r13
    1e47:	48 89 c7             	mov    rdi,rax
    1e4a:	5b                   	pop    rbx
    1e4b:	5d                   	pop    rbp
    1e4c:	41 5c                	pop    r12
    1e4e:	41 5d                	pop    r13
    1e50:	41 5e                	pop    r14
    1e52:	41 5f                	pop    r15
    1e54:	e9 d7 fd ff ff       	jmp    1c30 <cat5>
    1e59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001e60 <int2str>:
    1e60:	55                   	push   rbp
    1e61:	53                   	push   rbx
    1e62:	89 fd                	mov    ebp,edi
    1e64:	bf 19 00 00 00       	mov    edi,0x19
    1e69:	48 83 ec 08          	sub    rsp,0x8
    1e6d:	e8 c6 ec ff ff       	call   b38 <.plt.got+0x48>
    1e72:	48 8d 0d ae 07 00 00 	lea    rcx,[rip+0x7ae]        # 2627 <_IO_stdin_used+0x377>
    1e79:	48 89 c3             	mov    rbx,rax
    1e7c:	41 89 e8             	mov    r8d,ebp
    1e7f:	48 89 c7             	mov    rdi,rax
    1e82:	ba 19 00 00 00       	mov    edx,0x19
    1e87:	be 01 00 00 00       	mov    esi,0x1
    1e8c:	31 c0                	xor    eax,eax
    1e8e:	e8 f5 ec ff ff       	call   b88 <.plt.got+0x98>
    1e93:	48 83 c4 08          	add    rsp,0x8
    1e97:	48 89 d8             	mov    rax,rbx
    1e9a:	5b                   	pop    rbx
    1e9b:	5d                   	pop    rbp
    1e9c:	c3                   	ret    
    1e9d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001ea0 <newstr>:
    1ea0:	55                   	push   rbp
    1ea1:	53                   	push   rbx
    1ea2:	48 89 fd             	mov    rbp,rdi
    1ea5:	48 83 ec 08          	sub    rsp,0x8
    1ea9:	e8 5a ec ff ff       	call   b08 <.plt.got+0x18>
    1eae:	8d 78 01             	lea    edi,[rax+0x1]
    1eb1:	48 89 c3             	mov    rbx,rax
    1eb4:	48 63 ff             	movsxd rdi,edi
    1eb7:	e8 7c ec ff ff       	call   b38 <.plt.got+0x48>
    1ebc:	48 8d 53 01          	lea    rdx,[rbx+0x1]
    1ec0:	48 89 ee             	mov    rsi,rbp
    1ec3:	48 89 c7             	mov    rdi,rax
    1ec6:	e8 65 ec ff ff       	call   b30 <.plt.got+0x40>
    1ecb:	48 83 c4 08          	add    rsp,0x8
    1ecf:	5b                   	pop    rbx
    1ed0:	5d                   	pop    rbp
    1ed1:	c3                   	ret    
    1ed2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1ed6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1edd:	00 00 00 

0000000000001ee0 <space2underscore>:
    1ee0:	55                   	push   rbp
    1ee1:	53                   	push   rbx
    1ee2:	48 89 fd             	mov    rbp,rdi
    1ee5:	48 83 ec 08          	sub    rsp,0x8
    1ee9:	48 0f be 1f          	movsx  rbx,BYTE PTR [rdi]
    1eed:	84 db                	test   bl,bl
    1eef:	74 28                	je     1f19 <space2underscore+0x39>
    1ef1:	e8 8a ec ff ff       	call   b80 <.plt.got+0x90>
    1ef6:	48 89 ea             	mov    rdx,rbp
    1ef9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1f00:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    1f03:	f6 44 59 01 20       	test   BYTE PTR [rcx+rbx*2+0x1],0x20
    1f08:	74 03                	je     1f0d <space2underscore+0x2d>
    1f0a:	c6 02 5f             	mov    BYTE PTR [rdx],0x5f
    1f0d:	48 83 c2 01          	add    rdx,0x1
    1f11:	48 0f be 1a          	movsx  rbx,BYTE PTR [rdx]
    1f15:	84 db                	test   bl,bl
    1f17:	75 e7                	jne    1f00 <space2underscore+0x20>
    1f19:	48 83 c4 08          	add    rsp,0x8
    1f1d:	48 89 e8             	mov    rax,rbp
    1f20:	5b                   	pop    rbx
    1f21:	5d                   	pop    rbp
    1f22:	c3                   	ret    
    1f23:	0f 1f 00             	nop    DWORD PTR [rax]
    1f26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    1f2d:	00 00 00 

0000000000001f30 <singlespace>:
    1f30:	55                   	push   rbp
    1f31:	53                   	push   rbx
    1f32:	48 89 fd             	mov    rbp,rdi
    1f35:	48 83 ec 08          	sub    rsp,0x8
    1f39:	0f b6 1f             	movzx  ebx,BYTE PTR [rdi]
    1f3c:	84 db                	test   bl,bl
    1f3e:	74 5b                	je     1f9b <singlespace+0x6b>
    1f40:	e8 3b ec ff ff       	call   b80 <.plt.got+0x90>
    1f45:	49 89 e9             	mov    r9,rbp
    1f48:	48 89 e9             	mov    rcx,rbp
    1f4b:	31 f6                	xor    esi,esi
    1f4d:	eb 12                	jmp    1f61 <singlespace+0x31>
    1f4f:	90                   	nop
    1f50:	85 d2                	test   edx,edx
    1f52:	74 25                	je     1f79 <singlespace+0x49>
    1f54:	48 83 c1 01          	add    rcx,0x1
    1f58:	0f b6 19             	movzx  ebx,BYTE PTR [rcx]
    1f5b:	89 d6                	mov    esi,edx
    1f5d:	84 db                	test   bl,bl
    1f5f:	74 2c                	je     1f8d <singlespace+0x5d>
    1f61:	4c 8b 00             	mov    r8,QWORD PTR [rax]
    1f64:	48 0f be d3          	movsx  rdx,bl
    1f68:	41 0f b7 14 50       	movzx  edx,WORD PTR [r8+rdx*2]
    1f6d:	66 81 e2 00 20       	and    dx,0x2000
    1f72:	85 f6                	test   esi,esi
    1f74:	0f b7 d2             	movzx  edx,dx
    1f77:	75 d7                	jne    1f50 <singlespace+0x20>
    1f79:	48 83 c1 01          	add    rcx,0x1
    1f7d:	41 88 19             	mov    BYTE PTR [r9],bl
    1f80:	49 83 c1 01          	add    r9,0x1
    1f84:	0f b6 19             	movzx  ebx,BYTE PTR [rcx]
    1f87:	89 d6                	mov    esi,edx
    1f89:	84 db                	test   bl,bl
    1f8b:	75 d4                	jne    1f61 <singlespace+0x31>
    1f8d:	41 c6 01 00          	mov    BYTE PTR [r9],0x0
    1f91:	48 83 c4 08          	add    rsp,0x8
    1f95:	48 89 e8             	mov    rax,rbp
    1f98:	5b                   	pop    rbx
    1f99:	5d                   	pop    rbp
    1f9a:	c3                   	ret    
    1f9b:	49 89 f9             	mov    r9,rdi
    1f9e:	eb ed                	jmp    1f8d <singlespace+0x5d>

0000000000001fa0 <str2lower>:
    1fa0:	41 54                	push   r12
    1fa2:	55                   	push   rbp
    1fa3:	49 89 fc             	mov    r12,rdi
    1fa6:	48 0f be 2f          	movsx  rbp,BYTE PTR [rdi]
    1faa:	53                   	push   rbx
    1fab:	40 84 ed             	test   bpl,bpl
    1fae:	74 34                	je     1fe4 <str2lower+0x44>
    1fb0:	48 89 fb             	mov    rbx,rdi
    1fb3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1fb8:	40 0f be c5          	movsx  eax,bpl
    1fbc:	8d 90 80 00 00 00    	lea    edx,[rax+0x80]
    1fc2:	81 fa 7f 01 00 00    	cmp    edx,0x17f
    1fc8:	77 0b                	ja     1fd5 <str2lower+0x35>
    1fca:	e8 a9 eb ff ff       	call   b78 <.plt.got+0x88>
    1fcf:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1fd2:	8b 04 a8             	mov    eax,DWORD PTR [rax+rbp*4]
    1fd5:	88 03                	mov    BYTE PTR [rbx],al
    1fd7:	48 83 c3 01          	add    rbx,0x1
    1fdb:	48 0f be 2b          	movsx  rbp,BYTE PTR [rbx]
    1fdf:	40 84 ed             	test   bpl,bpl
    1fe2:	75 d4                	jne    1fb8 <str2lower+0x18>
    1fe4:	4c 89 e0             	mov    rax,r12
    1fe7:	5b                   	pop    rbx
    1fe8:	5d                   	pop    rbp
    1fe9:	41 5c                	pop    r12
    1feb:	c3                   	ret    
    1fec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001ff0 <str2upper>:
    1ff0:	41 54                	push   r12
    1ff2:	55                   	push   rbp
    1ff3:	49 89 fc             	mov    r12,rdi
    1ff6:	48 0f be 2f          	movsx  rbp,BYTE PTR [rdi]
    1ffa:	53                   	push   rbx
    1ffb:	40 84 ed             	test   bpl,bpl
    1ffe:	74 34                	je     2034 <str2upper+0x44>
    2000:	48 89 fb             	mov    rbx,rdi
    2003:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2008:	40 0f be c5          	movsx  eax,bpl
    200c:	8d 90 80 00 00 00    	lea    edx,[rax+0x80]
    2012:	81 fa 7f 01 00 00    	cmp    edx,0x17f
    2018:	77 0b                	ja     2025 <str2upper+0x35>
    201a:	e8 d1 ea ff ff       	call   af0 <.plt.got>
    201f:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2022:	8b 04 a8             	mov    eax,DWORD PTR [rax+rbp*4]
    2025:	88 03                	mov    BYTE PTR [rbx],al
    2027:	48 83 c3 01          	add    rbx,0x1
    202b:	48 0f be 2b          	movsx  rbp,BYTE PTR [rbx]
    202f:	40 84 ed             	test   bpl,bpl
    2032:	75 d4                	jne    2008 <str2upper+0x18>
    2034:	4c 89 e0             	mov    rax,r12
    2037:	5b                   	pop    rbx
    2038:	5d                   	pop    rbp
    2039:	41 5c                	pop    r12
    203b:	c3                   	ret    
    203c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002040 <str2varname>:
    2040:	48 83 ec 08          	sub    rsp,0x8
    2044:	e8 e7 fe ff ff       	call   1f30 <singlespace>
    2049:	48 89 c7             	mov    rdi,rax
    204c:	e8 8f fe ff ff       	call   1ee0 <space2underscore>
    2051:	48 83 c4 08          	add    rsp,0x8
    2055:	48 89 c7             	mov    rdi,rax
    2058:	e9 43 ff ff ff       	jmp    1fa0 <str2lower>
    205d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002060 <strindent>:
    2060:	41 57                	push   r15
    2062:	41 56                	push   r14
    2064:	49 89 fe             	mov    r14,rdi
    2067:	41 55                	push   r13
    2069:	41 54                	push   r12
    206b:	49 89 f5             	mov    r13,rsi
    206e:	55                   	push   rbp
    206f:	53                   	push   rbx
    2070:	48 83 ec 18          	sub    rsp,0x18
    2074:	44 0f b6 27          	movzx  r12d,BYTE PTR [rdi]
    2078:	45 84 e4             	test   r12b,r12b
    207b:	0f 84 d1 00 00 00    	je     2152 <strindent+0xf2>
    2081:	48 8d 57 01          	lea    rdx,[rdi+0x1]
    2085:	44 89 e0             	mov    eax,r12d
    2088:	bb 01 00 00 00       	mov    ebx,0x1
    208d:	0f 1f 00             	nop    DWORD PTR [rax]
    2090:	3c 0a                	cmp    al,0xa
    2092:	0f 94 c0             	sete   al
    2095:	48 83 c2 01          	add    rdx,0x1
    2099:	0f b6 c0             	movzx  eax,al
    209c:	01 c3                	add    ebx,eax
    209e:	0f b6 42 ff          	movzx  eax,BYTE PTR [rdx-0x1]
    20a2:	84 c0                	test   al,al
    20a4:	75 ea                	jne    2090 <strindent+0x30>
    20a6:	4c 89 f7             	mov    rdi,r14
    20a9:	e8 5a ea ff ff       	call   b08 <.plt.got+0x18>
    20ae:	4c 89 ef             	mov    rdi,r13
    20b1:	48 89 c5             	mov    rbp,rax
    20b4:	e8 4f ea ff ff       	call   b08 <.plt.got+0x18>
    20b9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    20bd:	0f af 1c 24          	imul   ebx,DWORD PTR [rsp]
    20c1:	8d 7c 2b 01          	lea    edi,[rbx+rbp*1+0x1]
    20c5:	4c 89 f5             	mov    rbp,r14
    20c8:	31 db                	xor    ebx,ebx
    20ca:	48 63 ff             	movsxd rdi,edi
    20cd:	e8 66 ea ff ff       	call   b38 <.plt.got+0x48>
    20d2:	49 89 c7             	mov    r15,rax
    20d5:	48 8b 04 24          	mov    rax,QWORD PTR [rsp]
    20d9:	48 83 c0 01          	add    rax,0x1
    20dd:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    20e2:	eb 22                	jmp    2106 <strindent+0xa6>
    20e4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    20e8:	80 7d ff 0a          	cmp    BYTE PTR [rbp-0x1],0xa
    20ec:	74 1d                	je     210b <strindent+0xab>
    20ee:	48 63 c3             	movsxd rax,ebx
    20f1:	48 83 c5 01          	add    rbp,0x1
    20f5:	83 c3 01             	add    ebx,0x1
    20f8:	45 88 24 07          	mov    BYTE PTR [r15+rax*1],r12b
    20fc:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
    2101:	45 84 e4             	test   r12b,r12b
    2104:	74 22                	je     2128 <strindent+0xc8>
    2106:	44 39 f5             	cmp    ebp,r14d
    2109:	75 dd                	jne    20e8 <strindent+0x88>
    210b:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    2110:	48 63 fb             	movsxd rdi,ebx
    2113:	4c 89 ee             	mov    rsi,r13
    2116:	4c 01 ff             	add    rdi,r15
    2119:	e8 12 ea ff ff       	call   b30 <.plt.got+0x40>
    211e:	03 1c 24             	add    ebx,DWORD PTR [rsp]
    2121:	eb cb                	jmp    20ee <strindent+0x8e>
    2123:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2128:	48 63 db             	movsxd rbx,ebx
    212b:	41 c6 04 1f 00       	mov    BYTE PTR [r15+rbx*1],0x0
    2130:	4c 89 f7             	mov    rdi,r14
    2133:	e8 c0 e9 ff ff       	call   af8 <.plt.got+0x8>
    2138:	4c 89 ef             	mov    rdi,r13
    213b:	e8 b8 e9 ff ff       	call   af8 <.plt.got+0x8>
    2140:	48 83 c4 18          	add    rsp,0x18
    2144:	4c 89 f8             	mov    rax,r15
    2147:	5b                   	pop    rbx
    2148:	5d                   	pop    rbp
    2149:	41 5c                	pop    r12
    214b:	41 5d                	pop    r13
    214d:	41 5e                	pop    r14
    214f:	41 5f                	pop    r15
    2151:	c3                   	ret    
    2152:	e8 b1 e9 ff ff       	call   b08 <.plt.got+0x18>
    2157:	4c 89 ef             	mov    rdi,r13
    215a:	48 89 c3             	mov    rbx,rax
    215d:	e8 a6 e9 ff ff       	call   b08 <.plt.got+0x18>
    2162:	8d 7c 03 01          	lea    edi,[rbx+rax*1+0x1]
    2166:	31 db                	xor    ebx,ebx
    2168:	48 63 ff             	movsxd rdi,edi
    216b:	e8 c8 e9 ff ff       	call   b38 <.plt.got+0x48>
    2170:	49 89 c7             	mov    r15,rax
    2173:	eb b6                	jmp    212b <strindent+0xcb>
    2175:	90                   	nop
    2176:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    217d:	00 00 00 

0000000000002180 <strpad>:
    2180:	41 55                	push   r13
    2182:	41 54                	push   r12
    2184:	4c 63 e6             	movsxd r12,esi
    2187:	55                   	push   rbp
    2188:	53                   	push   rbx
    2189:	89 d5                	mov    ebp,edx
    218b:	48 89 fb             	mov    rbx,rdi
    218e:	48 83 ec 08          	sub    rsp,0x8
    2192:	e8 71 e9 ff ff       	call   b08 <.plt.got+0x18>
    2197:	4c 39 e0             	cmp    rax,r12
    219a:	72 14                	jb     21b0 <strpad+0x30>
    219c:	48 83 c4 08          	add    rsp,0x8
    21a0:	48 89 d8             	mov    rax,rbx
    21a3:	5b                   	pop    rbx
    21a4:	5d                   	pop    rbp
    21a5:	41 5c                	pop    r12
    21a7:	41 5d                	pop    r13
    21a9:	c3                   	ret    
    21aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    21b0:	41 8d 74 24 01       	lea    esi,[r12+0x1]
    21b5:	48 89 df             	mov    rdi,rbx
    21b8:	4d 89 e5             	mov    r13,r12
    21bb:	48 63 f6             	movsxd rsi,esi
    21be:	e8 85 e9 ff ff       	call   b48 <.plt.got+0x58>
    21c3:	48 89 c3             	mov    rbx,rax
    21c6:	48 89 c2             	mov    rdx,rax
    21c9:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    21cb:	48 83 c2 04          	add    rdx,0x4
    21cf:	8d 81 ff fe fe fe    	lea    eax,[rcx-0x1010101]
    21d5:	f7 d1                	not    ecx
    21d7:	21 c8                	and    eax,ecx
    21d9:	25 80 80 80 80       	and    eax,0x80808080
    21de:	74 e9                	je     21c9 <strpad+0x49>
    21e0:	89 c1                	mov    ecx,eax
    21e2:	c1 e9 10             	shr    ecx,0x10
    21e5:	a9 80 80 00 00       	test   eax,0x8080
    21ea:	0f 44 c1             	cmove  eax,ecx
    21ed:	48 8d 4a 02          	lea    rcx,[rdx+0x2]
    21f1:	89 c7                	mov    edi,eax
    21f3:	48 0f 44 d1          	cmove  rdx,rcx
    21f7:	40 00 c7             	add    dil,al
    21fa:	48 83 da 03          	sbb    rdx,0x3
    21fe:	48 29 da             	sub    rdx,rbx
    2201:	41 39 d5             	cmp    r13d,edx
    2204:	48 63 c2             	movsxd rax,edx
    2207:	7e 14                	jle    221d <strpad+0x9d>
    2209:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2210:	40 88 2c 03          	mov    BYTE PTR [rbx+rax*1],bpl
    2214:	48 83 c0 01          	add    rax,0x1
    2218:	41 39 c5             	cmp    r13d,eax
    221b:	7f f3                	jg     2210 <strpad+0x90>
    221d:	42 c6 04 23 00       	mov    BYTE PTR [rbx+r12*1],0x0
    2222:	48 83 c4 08          	add    rsp,0x8
    2226:	48 89 d8             	mov    rax,rbx
    2229:	5b                   	pop    rbx
    222a:	5d                   	pop    rbp
    222b:	41 5c                	pop    r12
    222d:	41 5d                	pop    r13
    222f:	c3                   	ret    

0000000000002230 <__libc_csu_init>:
    2230:	41 57                	push   r15
    2232:	41 56                	push   r14
    2234:	41 89 ff             	mov    r15d,edi
    2237:	41 55                	push   r13
    2239:	41 54                	push   r12
    223b:	4c 8d 25 f6 1a 20 00 	lea    r12,[rip+0x201af6]        # 203d38 <__frame_dummy_init_array_entry>
    2242:	55                   	push   rbp
    2243:	48 8d 2d f6 1a 20 00 	lea    rbp,[rip+0x201af6]        # 203d40 <__init_array_end>
    224a:	53                   	push   rbx
    224b:	49 89 f6             	mov    r14,rsi
    224e:	49 89 d5             	mov    r13,rdx
    2251:	4c 29 e5             	sub    rbp,r12
    2254:	48 83 ec 08          	sub    rsp,0x8
    2258:	48 c1 fd 03          	sar    rbp,0x3
    225c:	e8 67 e8 ff ff       	call   ac8 <_init>
    2261:	48 85 ed             	test   rbp,rbp
    2264:	74 20                	je     2286 <__libc_csu_init+0x56>
    2266:	31 db                	xor    ebx,ebx
    2268:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    226f:	00 
    2270:	4c 89 ea             	mov    rdx,r13
    2273:	4c 89 f6             	mov    rsi,r14
    2276:	44 89 ff             	mov    edi,r15d
    2279:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    227d:	48 83 c3 01          	add    rbx,0x1
    2281:	48 39 dd             	cmp    rbp,rbx
    2284:	75 ea                	jne    2270 <__libc_csu_init+0x40>
    2286:	48 83 c4 08          	add    rsp,0x8
    228a:	5b                   	pop    rbx
    228b:	5d                   	pop    rbp
    228c:	41 5c                	pop    r12
    228e:	41 5d                	pop    r13
    2290:	41 5e                	pop    r14
    2292:	41 5f                	pop    r15
    2294:	c3                   	ret    
    2295:	90                   	nop
    2296:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    229d:	00 00 00 

00000000000022a0 <__libc_csu_fini>:
    22a0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000022a4 <_fini>:
    22a4:	48 83 ec 08          	sub    rsp,0x8
    22a8:	48 83 c4 08          	add    rsp,0x8
    22ac:	c3                   	ret    
